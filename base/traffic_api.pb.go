// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.1
// source: traffic_api.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

/// Modes of playback and recording.
type Mode int32

const (
	Mode_PLAY   Mode = 0 /// Playing a file.
	Mode_PAUSE  Mode = 1 /// Playback is paused.
	Mode_STOP   Mode = 2 /// Playback in stopped.
	Mode_RECORD Mode = 3 /// Recording a playback.
	Mode_SEEK   Mode = 4 /// Seek to offset in a playback
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "PLAY",
		1: "PAUSE",
		2: "STOP",
		3: "RECORD",
		4: "SEEK",
	}
	Mode_value = map[string]int32{
		"PLAY":   0,
		"PAUSE":  1,
		"STOP":   2,
		"RECORD": 3,
		"SEEK":   4,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_traffic_api_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_traffic_api_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_traffic_api_proto_rawDescGZIP(), []int{0}
}

/// Status of playback.
type PlaybackMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Current status.
	//
	// Types that are assignable to Status:
	//	*PlaybackMode_ErrorMessage
	//	*PlaybackMode_EOF
	//	*PlaybackMode_Mode
	Status        isPlaybackMode_Status `protobuf_oneof:"status"`
	OffsetTime    uint64                `protobuf:"varint,5,opt,name=offsetTime,proto3" json:"offsetTime,omitempty"`       /// Current offset in micro seconds.
	StartTime     uint64                `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`         /// Start time in monotonic micro seconds.
	EndTime       uint64                `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`             /// End time in monotonic micro seconds.
	TimeDeviation int64                 `protobuf:"varint,8,opt,name=timeDeviation,proto3" json:"timeDeviation,omitempty"` /// Time deviation in micro seconds, measured by server.
}

func (x *PlaybackMode) Reset() {
	*x = PlaybackMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackMode) ProtoMessage() {}

func (x *PlaybackMode) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackMode.ProtoReflect.Descriptor instead.
func (*PlaybackMode) Descriptor() ([]byte, []int) {
	return file_traffic_api_proto_rawDescGZIP(), []int{0}
}

func (m *PlaybackMode) GetStatus() isPlaybackMode_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *PlaybackMode) GetErrorMessage() string {
	if x, ok := x.GetStatus().(*PlaybackMode_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

func (x *PlaybackMode) GetEOF() string {
	if x, ok := x.GetStatus().(*PlaybackMode_EOF); ok {
		return x.EOF
	}
	return ""
}

func (x *PlaybackMode) GetMode() Mode {
	if x, ok := x.GetStatus().(*PlaybackMode_Mode); ok {
		return x.Mode
	}
	return Mode_PLAY
}

func (x *PlaybackMode) GetOffsetTime() uint64 {
	if x != nil {
		return x.OffsetTime
	}
	return 0
}

func (x *PlaybackMode) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PlaybackMode) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PlaybackMode) GetTimeDeviation() int64 {
	if x != nil {
		return x.TimeDeviation
	}
	return 0
}

type isPlaybackMode_Status interface {
	isPlaybackMode_Status()
}

type PlaybackMode_ErrorMessage struct {
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3,oneof"` /// Error reason.
}

type PlaybackMode_EOF struct {
	EOF string `protobuf:"bytes,3,opt,name=EOF,proto3,oneof"` /// End of file; playback finished
}

type PlaybackMode_Mode struct {
	Mode Mode `protobuf:"varint,4,opt,name=mode,proto3,enum=base.Mode,oneof"` /// Active with mode.
}

func (*PlaybackMode_ErrorMessage) isPlaybackMode_Status() {}

func (*PlaybackMode_EOF) isPlaybackMode_Status() {}

func (*PlaybackMode_Mode) isPlaybackMode_Status() {}

/// Information about all playbacks and recordings.
type PlaybackInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// List of all information.
	PlaybackInfo []*PlaybackInfo `protobuf:"bytes,1,rep,name=playbackInfo,proto3" json:"playbackInfo,omitempty"`
}

func (x *PlaybackInfos) Reset() {
	*x = PlaybackInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackInfos) ProtoMessage() {}

func (x *PlaybackInfos) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackInfos.ProtoReflect.Descriptor instead.
func (*PlaybackInfos) Descriptor() ([]byte, []int) {
	return file_traffic_api_proto_rawDescGZIP(), []int{1}
}

func (x *PlaybackInfos) GetPlaybackInfo() []*PlaybackInfo {
	if x != nil {
		return x.PlaybackInfo
	}
	return nil
}

//*
// Information about name space and file associated with playback or recording.
// Playback will play signals on namespace. Recordings will record all signals
// on name space.
type PlaybackConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileDescription *FileDescription `protobuf:"bytes,1,opt,name=fileDescription,proto3" json:"fileDescription,omitempty"` /// File information.
	Namespace       *NameSpace       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`             /// Name space associated.
}

func (x *PlaybackConfig) Reset() {
	*x = PlaybackConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackConfig) ProtoMessage() {}

func (x *PlaybackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackConfig.ProtoReflect.Descriptor instead.
func (*PlaybackConfig) Descriptor() ([]byte, []int) {
	return file_traffic_api_proto_rawDescGZIP(), []int{2}
}

func (x *PlaybackConfig) GetFileDescription() *FileDescription {
	if x != nil {
		return x.FileDescription
	}
	return nil
}

func (x *PlaybackConfig) GetNamespace() *NameSpace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

/// Information about a playback or a recording.
type PlaybackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaybackConfig *PlaybackConfig `protobuf:"bytes,1,opt,name=playbackConfig,proto3" json:"playbackConfig,omitempty"` /// File and name space information.
	PlaybackMode   *PlaybackMode   `protobuf:"bytes,2,opt,name=playbackMode,proto3" json:"playbackMode,omitempty"`     /// Current mode.
}

func (x *PlaybackInfo) Reset() {
	*x = PlaybackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traffic_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackInfo) ProtoMessage() {}

func (x *PlaybackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackInfo.ProtoReflect.Descriptor instead.
func (*PlaybackInfo) Descriptor() ([]byte, []int) {
	return file_traffic_api_proto_rawDescGZIP(), []int{3}
}

func (x *PlaybackInfo) GetPlaybackConfig() *PlaybackConfig {
	if x != nil {
		return x.PlaybackConfig
	}
	return nil
}

func (x *PlaybackInfo) GetPlaybackMode() *PlaybackMode {
	if x != nil {
		return x.PlaybackMode
	}
	return nil
}

var File_traffic_api_proto protoreflect.FileDescriptor

var file_traffic_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x0c, 0x50, 0x6c,
	0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x03, 0x45, 0x4f, 0x46, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x45, 0x4f, 0x46, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47,
	0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x36, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x0f, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x50,
	0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64,
	0x65, 0x2a, 0x3b, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4c, 0x41,
	0x59, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x43, 0x4f,
	0x52, 0x44, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x45, 0x4b, 0x10, 0x04, 0x32, 0x86,
	0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x12, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x11,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x00, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x62, 0x61,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_traffic_api_proto_rawDescOnce sync.Once
	file_traffic_api_proto_rawDescData = file_traffic_api_proto_rawDesc
)

func file_traffic_api_proto_rawDescGZIP() []byte {
	file_traffic_api_proto_rawDescOnce.Do(func() {
		file_traffic_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_traffic_api_proto_rawDescData)
	})
	return file_traffic_api_proto_rawDescData
}

var file_traffic_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_traffic_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_traffic_api_proto_goTypes = []interface{}{
	(Mode)(0),               // 0: base.Mode
	(*PlaybackMode)(nil),    // 1: base.PlaybackMode
	(*PlaybackInfos)(nil),   // 2: base.PlaybackInfos
	(*PlaybackConfig)(nil),  // 3: base.PlaybackConfig
	(*PlaybackInfo)(nil),    // 4: base.PlaybackInfo
	(*FileDescription)(nil), // 5: base.FileDescription
	(*NameSpace)(nil),       // 6: base.NameSpace
	(*Empty)(nil),           // 7: base.Empty
}
var file_traffic_api_proto_depIdxs = []int32{
	0, // 0: base.PlaybackMode.mode:type_name -> base.Mode
	4, // 1: base.PlaybackInfos.playbackInfo:type_name -> base.PlaybackInfo
	5, // 2: base.PlaybackConfig.fileDescription:type_name -> base.FileDescription
	6, // 3: base.PlaybackConfig.namespace:type_name -> base.NameSpace
	3, // 4: base.PlaybackInfo.playbackConfig:type_name -> base.PlaybackConfig
	1, // 5: base.PlaybackInfo.playbackMode:type_name -> base.PlaybackMode
	2, // 6: base.TrafficService.PlayTraffic:input_type -> base.PlaybackInfos
	7, // 7: base.TrafficService.PlayTrafficStatus:input_type -> base.Empty
	2, // 8: base.TrafficService.PlayTraffic:output_type -> base.PlaybackInfos
	2, // 9: base.TrafficService.PlayTrafficStatus:output_type -> base.PlaybackInfos
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_traffic_api_proto_init() }
func file_traffic_api_proto_init() {
	if File_traffic_api_proto != nil {
		return
	}
	file_common_proto_init()
	file_system_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_traffic_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traffic_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_traffic_api_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PlaybackMode_ErrorMessage)(nil),
		(*PlaybackMode_EOF)(nil),
		(*PlaybackMode_Mode)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_traffic_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_traffic_api_proto_goTypes,
		DependencyIndexes: file_traffic_api_proto_depIdxs,
		EnumInfos:         file_traffic_api_proto_enumTypes,
		MessageInfos:      file_traffic_api_proto_msgTypes,
	}.Build()
	File_traffic_api_proto = out.File
	file_traffic_api_proto_rawDesc = nil
	file_traffic_api_proto_goTypes = nil
	file_traffic_api_proto_depIdxs = nil
}
