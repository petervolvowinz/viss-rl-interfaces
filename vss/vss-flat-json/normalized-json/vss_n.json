[
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.Heading",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Heading"
  ],
  "description": "Current heading relative to geographic north. 0 = North, 90 = East, 180 = South, 270 = West.",
  "datatype": "double",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.HorizontalAccuracy",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Horizontal",
   "Accuracy"
  ],
  "description": "Accuracy of the latitude and longitude coordinates.",
  "datatype": "double",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.Latitude",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Latitude"
  ],
  "description": "Current latitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.",
  "datatype": "double",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.Longitude",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Longitude"
  ],
  "description": "Current longitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.",
  "datatype": "double",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.Timestamp",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Timestamp"
  ],
  "description": "Timestamp from GNSS system for current location, formatted according to ISO 8601 with UTC time zone.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.VerticalAccuracy",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Vertical",
   "Accuracy"
  ],
  "description": "Accuracy of altitude.",
  "datatype": "double",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.Altitude",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "Altitude"
  ],
  "description": "Current altitude relative to WGS 84 reference ellipsoid, as measured at the position of GNSS receiver antenna.",
  "datatype": "double",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.GNSSReceiver.FixType",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "G",
   "N",
   "S",
   "S",
   "Receiver",
   "Fix",
   "Type"
  ],
  "description": "Fix status of GNSS receiver.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.GNSSReceiver.MountingPosition.X",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "G",
   "N",
   "S",
   "S",
   "Receiver",
   "Mounting",
   "Position",
   "X"
  ],
  "description": "Mounting position of GNSS receiver antenna relative to vehicle coordinate system. Axis definitions according to ISO 8855. Origin at center of (first) rear axle. Positive values = forward of rear axle. Negative values = backward of rear axle.",
  "datatype": "int16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.GNSSReceiver.MountingPosition.Y",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "G",
   "N",
   "S",
   "S",
   "Receiver",
   "Mounting",
   "Position",
   "Y"
  ],
  "description": "Mounting position of GNSS receiver antenna relative to vehicle coordinate system. Axis definitions according to ISO 8855. Origin at center of (first) rear axle. Positive values = left of origin. Negative values = right of origin. Left/Right is as seen from driver perspective, i.e. by a person looking forward.",
  "datatype": "int16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentLocation.GNSSReceiver.MountingPosition.Z",
  "lextokens": [
   "Vehicle",
   "Current",
   "Location",
   "G",
   "N",
   "S",
   "S",
   "Receiver",
   "Mounting",
   "Position",
   "Z"
  ],
  "description": "Mounting position of GNSS receiver on Z-axis. Axis definitions according to ISO 8855. Origin at center of (first) rear axle. Positive values = above center of rear axle. Negative values = below center of rear axle.",
  "datatype": "int16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurrentOverallWeight",
  "lextokens": [
   "Vehicle",
   "Current",
   "Overall",
   "Weight"
  ],
  "description": "Current overall Vehicle weight. Including passengers, cargo and other load inside the car.",
  "datatype": "uint16",
  "unit": "kg"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Length",
  "lextokens": [
   "Vehicle",
   "Length"
  ],
  "description": "Overall vehicle length.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EVAPVaporPressureAlternate",
  "lextokens": [
   "Vehicle",
   "OBD",
   "E",
   "V",
   "A",
   "P",
   "Vapor",
   "Pressure",
   "Alternate"
  ],
  "description": "PID 54 - Alternate evaporative purge (EVAP) system pressure",
  "datatype": "float",
  "unit": "Pa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FreezeDTC",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Freeze",
   "D",
   "T",
   "C"
  ],
  "description": "PID 02 - DTC that triggered the freeze frame",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.AcceleratorPositionE",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Accelerator",
   "Position",
   "E"
  ],
  "description": "PID 4A - Accelerator pedal position E",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.CommandedEGR",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Commanded",
   "E",
   "G",
   "R"
  ],
  "description": "PID 2C - Commanded exhaust gas recirculation (EGR)",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.CommandedEquivalenceRatio",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Commanded",
   "Equivalence",
   "Ratio"
  ],
  "description": "PID 44 - Commanded equivalence ratio",
  "datatype": "float",
  "unit": "ratio"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.DistanceSinceDTCClear",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Distance",
   "Since",
   "D",
   "T",
   "C",
   "Clear"
  ],
  "description": "PID 31 - Distance traveled since codes cleared",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.MAP",
  "lextokens": [
   "Vehicle",
   "OBD",
   "MAP"
  ],
  "description": "PID 0B - Intake manifold pressure",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.RunTime",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Run",
   "Time"
  ],
  "description": "PID 1F - Engine run time",
  "datatype": "float",
  "unit": "s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ShortTermO2Trim1",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Short",
   "Term",
   "O2",
   "Trim1"
  ],
  "description": "PID 55 (byte A) - Short term secondary O2 trim - Bank 1",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Status.IsMILOn",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Status",
   "Is",
   "M",
   "I",
   "L",
   "On"
  ],
  "description": "Malfunction Indicator Light (MIL) False = Off, True = On",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Status.DTCCount",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Status",
   "D",
   "T",
   "C",
   "Count"
  ],
  "description": "Number of Diagnostic Trouble Codes (DTC)",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Status.IgnitionType",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Status",
   "Ignition",
   "Type"
  ],
  "description": "Type of the ignition for ICE - spark = spark plug ignition, compression = self-igniting (Diesel engines)",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.DriveCycleStatus.IgnitionType",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Drive",
   "Cycle",
   "Status",
   "Ignition",
   "Type"
  ],
  "description": "Type of the ignition for ICE - spark = spark plug ignition, compression = self-igniting (Diesel engines)",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.DriveCycleStatus.IsMILOn",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Drive",
   "Cycle",
   "Status",
   "Is",
   "M",
   "I",
   "L",
   "On"
  ],
  "description": "Malfunction Indicator Light (MIL) - False = Off, True = On",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.DriveCycleStatus.DTCCount",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Drive",
   "Cycle",
   "Status",
   "D",
   "T",
   "C",
   "Count"
  ],
  "description": "Number of sensor Trouble Codes (DTC)",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EGRError",
  "lextokens": [
   "Vehicle",
   "OBD",
   "E",
   "G",
   "R",
   "Error"
  ],
  "description": "PID 2D - Exhaust gas recirculation (EGR) error",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelType",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Type"
  ],
  "description": "PID 51 - Fuel type",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.LongTermO2Trim3",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Long",
   "Term",
   "O2",
   "Trim3"
  ],
  "description": "PID 56 (byte B) - Long term secondary O2 trim - Bank 3",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.CommandedEVAP",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Commanded",
   "E",
   "V",
   "A",
   "P"
  ],
  "description": "PID 2E - Commanded evaporative purge (EVAP) valve",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.RelativeThrottlePosition",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Relative",
   "Throttle",
   "Position"
  ],
  "description": "PID 45 - Relative throttle position",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ThrottleActuator",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Throttle",
   "Actuator"
  ],
  "description": "PID 4C - Commanded throttle actuator",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ThrottlePositionB",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Throttle",
   "Position",
   "B"
  ],
  "description": "PID 47 - Absolute throttle position B",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.HybridBatteryRemaining",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Hybrid",
   "Battery",
   "Remaining"
  ],
  "description": "PID 5B - Remaining life of hybrid battery",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.MAF",
  "lextokens": [
   "Vehicle",
   "OBD",
   "MAF"
  ],
  "description": "PID 10 - Grams of air drawn into engine per second",
  "datatype": "float",
  "unit": "g/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Speed",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Speed"
  ],
  "description": "PID 0D - Vehicle speed",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ThrottlePositionC",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Throttle",
   "Position",
   "C"
  ],
  "description": "PID 48 - Absolute throttle position C",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.AcceleratorPositionF",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Accelerator",
   "Position",
   "F"
  ],
  "description": "PID 4B - Accelerator pedal position F",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.LongTermO2Trim1",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Long",
   "Term",
   "O2",
   "Trim1"
  ],
  "description": "PID 56 (byte A) - Long term secondary O2 trim - Bank 1",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.OilTemperature",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Oil",
   "Temperature"
  ],
  "description": "PID 5C - Engine oil temperature",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.PidsA",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Pids",
   "A"
  ],
  "description": "PID 00 - Array of the supported PIDs 01 to 20 in Hexadecimal.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelRailPressureVac",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Rail",
   "Pressure",
   "Vac"
  ],
  "description": "PID 22 - Fuel rail pressure relative to vacuum",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.AmbientAirTemperature",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Ambient",
   "Air",
   "Temperature"
  ],
  "description": "PID 46 - Ambient air temperature",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.LongTermO2Trim2",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Long",
   "Term",
   "O2",
   "Trim2"
  ],
  "description": "PID 58 (byte A) - Long term secondary O2 trim - Bank 2",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.RunTimeMIL",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Run",
   "Time",
   "M",
   "I",
   "L"
  ],
  "description": "PID 4D - Run time with MIL on",
  "datatype": "float",
  "unit": "min"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.IntakeTemp",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Intake",
   "Temp"
  ],
  "description": "PID 0F - Intake temperature",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.OBDStandards",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O",
   "B",
   "D",
   "Standards"
  ],
  "description": "PID 1C - OBD standards this vehicle conforms to",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.TimeSinceDTCCleared",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Time",
   "Since",
   "D",
   "T",
   "C",
   "Cleared"
  ],
  "description": "PID 4E - Time since trouble codes cleared",
  "datatype": "float",
  "unit": "min"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EVAPVaporPressure",
  "lextokens": [
   "Vehicle",
   "OBD",
   "E",
   "V",
   "A",
   "P",
   "Vapor",
   "Pressure"
  ],
  "description": "PID 32 - Evaporative purge (EVAP) system pressure",
  "datatype": "float",
  "unit": "Pa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EthanolPercent",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Ethanol",
   "Percent"
  ],
  "description": "PID 52 - Percentage of ethanol in the fuel",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelLevel",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Level"
  ],
  "description": "PID 2F - Fuel level in the fuel tank",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelRailPressureAbsolute",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Rail",
   "Pressure",
   "Absolute"
  ],
  "description": "PID 59 - Absolute fuel rail pressure",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.IsPTOActive",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Is",
   "P",
   "T",
   "O",
   "Active"
  ],
  "description": "PID 1E - Auxiliary input status (power take off)",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.OxygenSensorsIn2Banks",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Oxygen",
   "Sensors",
   "In2",
   "Banks"
  ],
  "description": "PID 13 - Presence of oxygen sensors in 2 banks. [A0..A3] == Bank 1, Sensors 1-4. [A4..A7] == Bank 2, Sensors 1-4",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.PidsC",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Pids",
   "C"
  ],
  "description": "PID 40 - Array of the supported PIDs 41 to 60 in Hexadecimal.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.RelativeAcceleratorPosition",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Relative",
   "Accelerator",
   "Position"
  ],
  "description": "PID 5A - Relative accelerator pedal position",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.BarometricPressure",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Barometric",
   "Pressure"
  ],
  "description": "PID 33 - Barometric pressure",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Catalyst.Bank1.Temperature2",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Catalyst",
   "Bank1",
   "Temperature2"
  ],
  "description": "PID 3E - Catalyst temperature from bank 1, sensor 2",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Catalyst.Bank1.Temperature1",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Catalyst",
   "Bank1",
   "Temperature1"
  ],
  "description": "PID 3C - Catalyst temperature from bank 1, sensor 1",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Catalyst.Bank2.Temperature1",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Catalyst",
   "Bank2",
   "Temperature1"
  ],
  "description": "PID 3D - Catalyst temperature from bank 2, sensor 1",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.Catalyst.Bank2.Temperature2",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Catalyst",
   "Bank2",
   "Temperature2"
  ],
  "description": "PID 3F - Catalyst temperature from bank 2, sensor 2",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.DistanceWithMIL",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Distance",
   "With",
   "M",
   "I",
   "L"
  ],
  "description": "PID 21 - Distance traveled with MIL on",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EngineSpeed",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Engine",
   "Speed"
  ],
  "description": "PID 0C - Engine speed measured as rotations per minute",
  "datatype": "float",
  "unit": "rpm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EngineLoad",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Engine",
   "Load"
  ],
  "description": "PID 04 - Engine load in percent - 0 = no load, 100 = full load",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.MaxMAF",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Max",
   "M",
   "A",
   "F"
  ],
  "description": "PID 50 - Maximum flow for mass air flow sensor",
  "datatype": "float",
  "unit": "g/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ShortTermO2Trim4",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Short",
   "Term",
   "O2",
   "Trim4"
  ],
  "description": "PID 57 (byte B) - Short term secondary O2 trim - Bank 4",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.WarmupsSinceDTCClear",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Warmups",
   "Since",
   "D",
   "T",
   "C",
   "Clear"
  ],
  "description": "PID 30 - Number of warm-ups since codes cleared",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.LongTermO2Trim4",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Long",
   "Term",
   "O2",
   "Trim4"
  ],
  "description": "PID 58 (byte B) - Long term secondary O2 trim - Bank 4",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ThrottlePosition",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Throttle",
   "Position"
  ],
  "description": "PID 11 - Throttle position - 0 = closed throttle, 100 = open throttle",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.TimingAdvance",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Timing",
   "Advance"
  ],
  "description": "PID 0E - Time advance",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.CoolantTemperature",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Coolant",
   "Temperature"
  ],
  "description": "PID 05 - Coolant temperature",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelInjectionTiming",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Injection",
   "Timing"
  ],
  "description": "PID 5D - Fuel injection timing",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelPressure",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Pressure"
  ],
  "description": "PID 0A - Fuel pressure",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.LongTermFuelTrim2",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Long",
   "Term",
   "Fuel",
   "Trim2"
  ],
  "description": "PID 09 - Long Term (learned) Fuel Trim - Bank 2 - negative percent leaner, positive percent richer",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelStatus",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Status"
  ],
  "description": "PID 03 - Fuel status",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor7.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor7",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor7.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor7",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor7.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor7",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor8.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor8",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor8.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor8",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor8.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor8",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor1.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor1",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor1.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor1",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor1.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor1",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor2.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor2",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor2.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor2",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor2.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor2",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor3.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor3",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor3.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor3",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor3.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor3",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor4.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor4",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor4.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor4",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor4.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor4",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor5.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor5",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor5.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor5",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor5.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor5",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor6.Current",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor6",
   "Current"
  ],
  "description": "PID 3x (byte CD) - Current for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor6.Lambda",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor6",
   "Lambda"
  ],
  "description": "PID 2x (byte AB) and PID 3x (byte AB) - Lambda for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2WR.Sensor6.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2WR",
   "Sensor6",
   "Voltage"
  ],
  "description": "PID 2x (byte CD) - Voltage for wide range/band oxygen sensor",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.OxygenSensorsIn4Banks",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Oxygen",
   "Sensors",
   "In4",
   "Banks"
  ],
  "description": "PID 1D - Presence of oxygen sensors in 4 banks. Similar to PID 13, but [A0..A7] == [B1S1, B1S2, B2S1, B2S2, B3S1, B3S2, B4S1, B4S2]",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.LongTermFuelTrim1",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Long",
   "Term",
   "Fuel",
   "Trim1"
  ],
  "description": "PID 07 - Long Term (learned) Fuel Trim - Bank 1 - negative percent leaner, positive percent richer",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ControlModuleVoltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Control",
   "Module",
   "Voltage"
  ],
  "description": "PID 42 - Control module voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.PidsB",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Pids",
   "B"
  ],
  "description": "PID 20 - Array of the supported PIDs 21 to 40 in Hexadecimal.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ShortTermO2Trim2",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Short",
   "Term",
   "O2",
   "Trim2"
  ],
  "description": "PID 57 (byte A) - Short term secondary O2 trim - Bank 2",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ShortTermO2Trim3",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Short",
   "Term",
   "O2",
   "Trim3"
  ],
  "description": "PID 55 (byte B) - Short term secondary O2 trim - Bank 3",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ShortTermFuelTrim2",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Short",
   "Term",
   "Fuel",
   "Trim2"
  ],
  "description": "PID 08 - Short Term (immediate) Fuel Trim - Bank 2 - negative percent leaner, positive percent richer",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.DTCList",
  "lextokens": [
   "Vehicle",
   "OBD",
   "D",
   "T",
   "C",
   "List"
  ],
  "description": "List of currently active DTCs formatted according OBD II (SAE-J2012DA_201812) standard ([P|C|B|U]XXXXX )",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelRailPressureDirect",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Rail",
   "Pressure",
   "Direct"
  ],
  "description": "PID 23 - Fuel rail pressure direct inject",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.FuelRate",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Fuel",
   "Rate"
  ],
  "description": "PID 5E - Engine fuel rate",
  "datatype": "float",
  "unit": "l/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor5.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor5",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor5.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor5",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor6.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor6",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor6.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor6",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor7.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor7",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor7.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor7",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor8.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor8",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor8.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor8",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor1.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor1",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor1.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor1",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor2.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor2",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor2.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor2",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor3.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor3",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor3.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor3",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor4.ShortTermFuelTrim",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor4",
   "Short",
   "Term",
   "Fuel",
   "Trim"
  ],
  "description": "PID 1x (byte B) - Short term fuel trim",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.O2.Sensor4.Voltage",
  "lextokens": [
   "Vehicle",
   "OBD",
   "O2",
   "Sensor4",
   "Voltage"
  ],
  "description": "PID 1x (byte A) - Sensor voltage",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.ShortTermFuelTrim1",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Short",
   "Term",
   "Fuel",
   "Trim1"
  ],
  "description": "PID 06 - Short Term (immediate) Fuel Trim - Bank 1 - negative percent leaner, positive percent richer",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.AbsoluteLoad",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Absolute",
   "Load"
  ],
  "description": "PID 43 - Absolute load value",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.AcceleratorPositionD",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Accelerator",
   "Position",
   "D"
  ],
  "description": "PID 49 - Accelerator pedal position D",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.AirStatus",
  "lextokens": [
   "Vehicle",
   "OBD",
   "Air",
   "Status"
  ],
  "description": "PID 12 - Secondary air status",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.OBD.EVAPVaporPressureAbsolute",
  "lextokens": [
   "Vehicle",
   "OBD",
   "E",
   "V",
   "A",
   "P",
   "Vapor",
   "Pressure",
   "Absolute"
  ],
  "description": "PID 53 - Absolute evaporative purge (EVAP) system pressure",
  "datatype": "float",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.TripDuration",
  "lextokens": [
   "Vehicle",
   "Trip",
   "Duration"
  ],
  "description": "Duration of latest trip.",
  "datatype": "float",
  "unit": "s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VehicleInteriorType",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Vehicle",
   "Interior",
   "Type"
  ],
  "description": "The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.).",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VehicleSeatingCapacity",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Vehicle",
   "Seating",
   "Capacity"
  ],
  "description": "The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.",
  "datatype": "uint16",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VehicleSpecialUsage",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Vehicle",
   "Special",
   "Usage"
  ],
  "description": "Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.KnownVehicleDamages",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Known",
   "Vehicle",
   "Damages"
  ],
  "description": "A textual description of known damages, both repaired and unrepaired.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.Model",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Model"
  ],
  "description": "Vehicle model.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VIN",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "VIN"
  ],
  "description": "17-character Vehicle Identification Number (VIN) as defined by ISO 3779.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VehicleModelDate",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Vehicle",
   "Model",
   "Date"
  ],
  "description": "The release date in ISO 8601 format of a vehicle model (often used to differentiate versions of the same make and model).",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.Year",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Year"
  ],
  "description": "Model year of the vehicle.",
  "datatype": "uint16",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.Brand",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Brand"
  ],
  "description": "Vehicle brand or manufacturer.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.MeetsEmissionStandard",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Meets",
   "Emission",
   "Standard"
  ],
  "description": "Indicates that the vehicle meets the respective emission standard.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VehicleConfiguration",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Vehicle",
   "Configuration"
  ],
  "description": "A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.VehicleInteriorColor",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Vehicle",
   "Interior",
   "Color"
  ],
  "description": "The color or color combination of the interior of the vehicle.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.DateVehicleFirstRegistered",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Date",
   "Vehicle",
   "First",
   "Registered"
  ],
  "description": "The date in ISO 8601 format of the first registration of the vehicle with the respective public authorities.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.PurchaseDate",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Purchase",
   "Date"
  ],
  "description": "The date in ISO 8601 format of the item e.g. vehicle was purchased by the current owner.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.OptionalExtras",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Optional",
   "Extras"
  ],
  "description": "Optional extras refers to all car equipment options that are not installed as standard by the manufacturer.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.ProductionDate",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Production",
   "Date"
  ],
  "description": "The date in ISO 8601 format of production of the item, e.g. vehicle.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.WMI",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "WMI"
  ],
  "description": "3-character World Manufacturer Identification (WMI) as defined by ISO 3780.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.AcrissCode",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Acriss",
   "Code"
  ],
  "description": "The ACRISS Car Classification Code is a code used by many car rental companies.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VehicleIdentification.BodyType",
  "lextokens": [
   "Vehicle",
   "Vehicle",
   "Identification",
   "Body",
   "Type"
  ],
  "description": "Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.AngularVelocity.Roll",
  "lextokens": [
   "Vehicle",
   "Angular",
   "Velocity",
   "Roll"
  ],
  "description": "Vehicle rotation rate along X (longitudinal).",
  "datatype": "float",
  "unit": "degrees/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.AngularVelocity.Yaw",
  "lextokens": [
   "Vehicle",
   "Angular",
   "Velocity",
   "Yaw"
  ],
  "description": "Vehicle rotation rate along Z (vertical).",
  "datatype": "float",
  "unit": "degrees/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.AngularVelocity.Pitch",
  "lextokens": [
   "Vehicle",
   "Angular",
   "Velocity",
   "Pitch"
  ],
  "description": "Vehicle rotation rate along Y (lateral).",
  "datatype": "float",
  "unit": "degrees/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.LowVoltageSystemState",
  "lextokens": [
   "Vehicle",
   "Low",
   "Voltage",
   "System",
   "State"
  ],
  "description": "State of the supply voltage of the control units (usually 12V).",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.AccumulatedBrakingEnergy",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Accumulated",
   "Braking",
   "Energy"
  ],
  "description": "The accumulated energy from regenerative braking over lifetime.",
  "datatype": "float",
  "unit": "kWh"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.Power",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Power"
  ],
  "description": "Current motor power output. Negative values indicate regen mode.",
  "datatype": "int16",
  "unit": "kW"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.Speed",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Speed"
  ],
  "description": "Motor rotational speed measured as rotations per minute. Negative values indicate reverse driving mode.",
  "datatype": "int32",
  "unit": "rpm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.Temperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Temperature"
  ],
  "description": "Motor temperature.",
  "datatype": "int16",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.Torque",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Torque"
  ],
  "description": "Current motor torque. Negative values indicate regen mode.",
  "datatype": "int16",
  "unit": "Nm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.MaxRegenPower",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Max",
   "Regen",
   "Power"
  ],
  "description": "Peak regen/brake power, in kilowatts, that motor(s) can generate.",
  "datatype": "uint16",
  "unit": "kW"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.MaxRegenTorque",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Max",
   "Regen",
   "Torque"
  ],
  "description": "Peak regen/brake torque, in newton meter, that the motor(s) can generate.",
  "datatype": "uint16",
  "unit": "Nm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.MaxPower",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Max",
   "Power"
  ],
  "description": "Peak power, in kilowatts, that motor(s) can generate.",
  "datatype": "uint16",
  "unit": "kW"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.MaxTorque",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Max",
   "Torque"
  ],
  "description": "Peak power, in newton meter, that the motor(s) can generate.",
  "datatype": "uint16",
  "unit": "Nm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.CoolantTemperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Coolant",
   "Temperature"
  ],
  "description": "Motor coolant temperature (if applicable).",
  "datatype": "int16",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.ElectricMotor.EngineCode",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Electric",
   "Motor",
   "Engine",
   "Code"
  ],
  "description": "Engine code designation, as specified by vehicle manufacturer.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Id",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Id"
  ],
  "description": "Battery Identification Number as assigned by OEM.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.IsPowerConnected",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Is",
   "Power",
   "Connected"
  ],
  "description": "Indicating if the power (positive terminator) of the traction battery is connected to the powertrain.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.AccumulatedChargedThroughput",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Accumulated",
   "Charged",
   "Throughput"
  ],
  "description": "The accumulated charge throughput delivered to the battery during charging over lifetime of the battery.",
  "datatype": "float",
  "unit": "Ah"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.AccumulatedConsumedEnergy",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Accumulated",
   "Consumed",
   "Energy"
  ],
  "description": "The accumulated energy leaving HV battery for propulsion and auxiliary loads over lifetime of the battery.",
  "datatype": "float",
  "unit": "kWh"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.AccumulatedConsumedThroughput",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Accumulated",
   "Consumed",
   "Throughput"
  ],
  "description": "The accumulated charge throughput leaving HV battery for propulsion and auxiliary loads over lifetime of the battery.",
  "datatype": "float",
  "unit": "Ah"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.CurrentPower",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Current",
   "Power"
  ],
  "description": "Current electrical energy flowing in/out of battery. Positive = Energy flowing in to battery, e.g. during charging. Negative = Energy flowing out of battery, e.g. during driving.",
  "datatype": "float",
  "unit": "W"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.DCDC.PowerLoss",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "DCDC",
   "Power",
   "Loss"
  ],
  "description": "Electrical energy lost by power dissipation to heat inside DC/DC converter.",
  "datatype": "float",
  "unit": "W"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.DCDC.Temperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "DCDC",
   "Temperature"
  ],
  "description": "Current temperature of DC/DC converter converting battery high voltage to vehicle low voltage (typically 12 Volts).",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.GrossCapacity",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Gross",
   "Capacity"
  ],
  "description": "Gross capacity of the battery.",
  "datatype": "uint16",
  "unit": "kWh"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.NominalVoltage",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Nominal",
   "Voltage"
  ],
  "description": "Nominal Voltage of the battery.",
  "datatype": "uint16",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.ProductionDate",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Production",
   "Date"
  ],
  "description": "Production date of battery in ISO8601 format, e.g. YYYY-MM-DD.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeRate",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Rate"
  ],
  "description": "Current charging rate, as in kilometers of range added per hour.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.Mode",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Mode"
  ],
  "description": "Control of the charge process. MANUAL means manually initiated (plug-in event, companion app, etc). TIMER means timer-based. GRID means grid-controlled (e.g. ISO 15118). PROFILE means controlled by profile download to vehicle.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.StartStopCharging",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Start",
   "Stop",
   "Charging"
  ],
  "description": "Start or stop the charging process.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.TimeToComplete",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Time",
   "To",
   "Complete"
  ],
  "description": "The time needed for the current charging process to reach Charging.ChargeLimit. 0 if charging is complete or no charging process is active or planned.",
  "datatype": "uint32",
  "unit": "s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeLimit",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Limit"
  ],
  "description": "Target charge limit (state of charge) for battery.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.Temperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Temperature"
  ],
  "description": "Current temperature of AC/DC converter converting grid voltage to battery voltage.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeCurrent.DC",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Current",
   "DC"
  ],
  "description": "Current DC charging current at inlet. Negative if returning energy to grid.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeCurrent.Phase1",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Current",
   "Phase1"
  ],
  "description": "Current AC charging current (rms) at inlet for Phase 1. Negative if returning energy to grid.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeCurrent.Phase2",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Current",
   "Phase2"
  ],
  "description": "Current AC charging current (rms) at inlet for Phase 2. Negative if returning energy to grid.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeCurrent.Phase3",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Current",
   "Phase3"
  ],
  "description": "Current AC charging current (rms) at inlet for Phase 3. Negative if returning energy to grid.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargePlugType",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Plug",
   "Type"
  ],
  "description": "Type of charge plug (charging inlet) available on the vehicle. IEC types refer to IEC 62196,  GBT refers to  GB/T 20234.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargePortFlap",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Port",
   "Flap"
  ],
  "description": "Status of the charge port cover, can potentially be controlled manually.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeVoltage.DC",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Voltage",
   "DC"
  ],
  "description": "Current DC charging voltage at charging inlet.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeVoltage.Phase1",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Voltage",
   "Phase1"
  ],
  "description": "Current AC charging voltage (rms) at inlet for Phase 1.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeVoltage.Phase2",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Voltage",
   "Phase2"
  ],
  "description": "Current AC charging voltage (rms) at inlet for Phase 2.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.ChargeVoltage.Phase3",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Charge",
   "Voltage",
   "Phase3"
  ],
  "description": "Current AC charging voltage (rms) at inlet for Phase 3.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.IsCharging",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Is",
   "Charging"
  ],
  "description": "True if charging is ongoing. Charging is considered to be ongoing if energy is flowing from charger to vehicle.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.IsDischarging",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Is",
   "Discharging"
  ],
  "description": "True if discharging (vehicle to grid) is ongoing. Discharging is considered to be ongoing if energy is flowing from vehicle to charger/grid.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.MaximumChargingCurrent.Phase2",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Maximum",
   "Charging",
   "Current",
   "Phase2"
  ],
  "description": "Maximum AC charging current (rms) at inlet for Phase 2 that can be accepted by the system.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.MaximumChargingCurrent.Phase3",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Maximum",
   "Charging",
   "Current",
   "Phase3"
  ],
  "description": "Maximum AC charging current (rms) at inlet for Phase 3 that can be accepted by the system.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.MaximumChargingCurrent.DC",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Maximum",
   "Charging",
   "Current",
   "DC"
  ],
  "description": "Maximum DC charging current at inlet that can be accepted by the system.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.MaximumChargingCurrent.Phase1",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Maximum",
   "Charging",
   "Current",
   "Phase1"
  ],
  "description": "Maximum AC charging current (rms) at inlet for Phase 1 that can be accepted by the system.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.IsChargingCableConnected",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Is",
   "Charging",
   "Cable",
   "Connected"
  ],
  "description": "Indicates if a charging cable is physically connected to the vehicle or not.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.IsChargingCableLocked",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Is",
   "Charging",
   "Cable",
   "Locked"
  ],
  "description": "Is charging cable locked to prevent removal.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.PowerLoss",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Power",
   "Loss"
  ],
  "description": "Electrical energy lost by power dissipation to heat inside the AC/DC converter.",
  "datatype": "float",
  "unit": "W"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.Timer.Mode",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Timer",
   "Mode"
  ],
  "description": "Defines timer mode for charging: INACTIVE - no timer set, charging may start as soon as battery is connected to a charger. START_TIME - charging shall start at Charging.Timer.Time. END_TIME - charging shall be finished (reach Charging.ChargeLimit) at Charging.Timer.Time. When charging is completed the vehicle shall change mode to 'inactive' or set a new Charging.Timer.Time. Charging shall start immediately if mode is 'starttime' or 'endtime' and Charging.Timer.Time is a time in the past.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Charging.Timer.Time",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Charging",
   "Timer",
   "Time"
  ],
  "description": "Time for next charging-related action, formatted according to ISO 8601 with UTC time zone. Value has no significance if Charging.Timer.Mode is 'inactive'.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.CurrentCurrent",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Current",
   "Current"
  ],
  "description": "Current current flowing in/out of battery. Positive = Current flowing in to battery, e.g. during charging. Negative = Current flowing out of battery, e.g. during driving.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.IsGroundConnected",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Is",
   "Ground",
   "Connected"
  ],
  "description": "Indicating if the ground (negative terminator) of the traction battery is connected to the powertrain.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.MaxVoltage",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Max",
   "Voltage"
  ],
  "description": "Max allowed voltage of the battery, e.g. during charging.",
  "datatype": "uint16",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.StateOfCharge.Current",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "State",
   "Of",
   "Charge",
   "Current"
  ],
  "description": "Physical state of charge of the high voltage battery, relative to net capacity. This is not necessarily the state of charge being displayed to the customer.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.StateOfCharge.CurrentEnergy",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "State",
   "Of",
   "Charge",
   "Current",
   "Energy"
  ],
  "description": "Physical state of charge of high voltage battery expressed in kWh.",
  "datatype": "float",
  "unit": "kWh"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.StateOfCharge.Displayed",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "State",
   "Of",
   "Charge",
   "Displayed"
  ],
  "description": "State of charge displayed to the customer.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.StateOfHealth",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "State",
   "Of",
   "Health"
  ],
  "description": "Calculated battery state of health at standard conditions.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.CurrentVoltage",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Current",
   "Voltage"
  ],
  "description": "Current Voltage of the battery.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Temperature.Min",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Temperature",
   "Min"
  ],
  "description": "Current minimum temperature of the battery cells, i.e. temperature of the coldest cell.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Temperature.Average",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Temperature",
   "Average"
  ],
  "description": "Current average temperature of the battery cells.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Temperature.Max",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Temperature",
   "Max"
  ],
  "description": "Current maximum temperature of the battery cells, i.e. temperature of the hottest cell.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.AccumulatedChargedEnergy",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Accumulated",
   "Charged",
   "Energy"
  ],
  "description": "The accumulated energy delivered to the battery during charging over lifetime of the battery.",
  "datatype": "float",
  "unit": "kWh"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.CellVoltage.Max",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Cell",
   "Voltage",
   "Max"
  ],
  "description": "Current voltage of the battery cell with highest voltage.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.CellVoltage.Min",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Cell",
   "Voltage",
   "Min"
  ],
  "description": "Current voltage of the battery cell with lowest voltage.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.NetCapacity",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Net",
   "Capacity"
  ],
  "description": "Total net capacity of the battery considering aging.",
  "datatype": "uint16",
  "unit": "kWh"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.PowerLoss",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Power",
   "Loss"
  ],
  "description": "Electrical energy lost by power dissipation to heat inside the battery.",
  "datatype": "float",
  "unit": "W"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.TractionBattery.Range",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Traction",
   "Battery",
   "Range"
  ],
  "description": "Remaining range in meters using only battery.",
  "datatype": "uint32",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Type",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Type"
  ],
  "description": "Defines the powertrain type of the vehicle.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.SelectedGear",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Selected",
   "Gear"
  ],
  "description": "The selected gear. 0=Neutral, 1/2/..=Forward, -1/-2/..=Reverse, 126=Park, 127=Drive.",
  "datatype": "int8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.CurrentGear",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Current",
   "Gear"
  ],
  "description": "The current gear. 0=Neutral, 1/2/..=Forward, -1/-2/..=Reverse.",
  "datatype": "int8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.DriveType",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Drive",
   "Type"
  ],
  "description": "Drive type.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.PerformanceMode",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Performance",
   "Mode"
  ],
  "description": "Current gearbox performance mode.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.ClutchWear",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Clutch",
   "Wear"
  ],
  "description": "Clutch wear as a percent. 0 = no wear. 100 = worn.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.IsLowRangeEngaged",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Is",
   "Low",
   "Range",
   "Engaged"
  ],
  "description": "Is gearbox in low range mode or not. False = Normal/High range engaged. True = Low range engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.Type",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Type"
  ],
  "description": "Transmission type.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.GearCount",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Gear",
   "Count"
  ],
  "description": "Number of forward gears in the transmission. -1 = CVT.",
  "datatype": "int8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.IsElectricalPowertrainEngaged",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Is",
   "Electrical",
   "Powertrain",
   "Engaged"
  ],
  "description": "Is electrical powertrain mechanically connected/engaged to the drivetrain or not. False = Disconnected/Disengaged. True = Connected/Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.TorqueDistribution",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Torque",
   "Distribution"
  ],
  "description": "Torque distribution between front and rear axle in percent. -100% = Full torque to front axle, 0% = 50:50 Front/Rear, 100% = Full torque to rear axle.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.GearChangeMode",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Gear",
   "Change",
   "Mode"
  ],
  "description": "Is the gearbox in automatic or manual (paddle) mode.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.IsParkLockEngaged",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Is",
   "Park",
   "Lock",
   "Engaged"
  ],
  "description": "Is the transmission park lock engaged or not. False = Disengaged. True = Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.Temperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Temperature"
  ],
  "description": "The current gearbox temperature.",
  "datatype": "int16",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.TravelledDistance",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Travelled",
   "Distance"
  ],
  "description": "Odometer reading, total distance travelled during the lifetime of the transmission.",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.ClutchEngagement",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Clutch",
   "Engagement"
  ],
  "description": "Clutch engagement. 0% = Clutch fully disengaged. 100% = Clutch fully engaged.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.DiffLockFrontEngagement",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Diff",
   "Lock",
   "Front",
   "Engagement"
  ],
  "description": "Front Diff Lock engagement. 0% = Diff lock fully disengaged. 100% = Diff lock fully engaged.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Transmission.DiffLockRearEngagement",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Transmission",
   "Diff",
   "Lock",
   "Rear",
   "Engagement"
  ],
  "description": "Rear Diff Lock engagement. 0% = Diff lock fully disengaged. 100% = Diff lock fully engaged.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.CompressionRatio",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Compression",
   "Ratio"
  ],
  "description": "Engine compression ratio, specified in the format 'X:1', e.g. '9.2:1'.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.Power",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Power"
  ],
  "description": "Current engine power output. Shall be reported as 0 during engine breaking.",
  "datatype": "uint16",
  "unit": "kW"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.StrokeLength",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Stroke",
   "Length"
  ],
  "description": "Stroke length in millimetres.",
  "datatype": "float",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EngineOilLevel",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Engine",
   "Oil",
   "Level"
  ],
  "description": "Engine oil level.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.IdleHours",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Idle",
   "Hours"
  ],
  "description": "Accumulated idling time during engine lifetime. Definition of idling is not standardized.",
  "datatype": "float",
  "unit": "h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.OilLifeRemaining",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Oil",
   "Life",
   "Remaining"
  ],
  "description": "Remaining engine oil life in seconds. Negative values can be used to indicate that lifetime has been exceeded.",
  "datatype": "int32",
  "unit": "s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.AspirationType",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Aspiration",
   "Type"
  ],
  "description": "Type of aspiration (natural, turbocharger, supercharger etc).",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.Displacement",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Displacement"
  ],
  "description": "Displacement in cubic centimetres.",
  "datatype": "uint16",
  "unit": "cm^3"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.MaxTorque",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Max",
   "Torque"
  ],
  "description": "Peak torque, in newton meter, that the engine can generate.",
  "datatype": "uint16",
  "unit": "Nm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.NumberOfCylinders",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Number",
   "Of",
   "Cylinders"
  ],
  "description": "Number of cylinders.",
  "datatype": "uint16",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselParticulateFilter.OutletTemperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Particulate",
   "Filter",
   "Outlet",
   "Temperature"
  ],
  "description": "Outlet temperature of Diesel Particulate Filter.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselParticulateFilter.DeltaPressure",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Particulate",
   "Filter",
   "Delta",
   "Pressure"
  ],
  "description": "Delta Pressure of Diesel Particulate Filter.",
  "datatype": "float",
  "unit": "Pa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselParticulateFilter.InletTemperature",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Particulate",
   "Filter",
   "Inlet",
   "Temperature"
  ],
  "description": "Inlet temperature of Diesel Particulate Filter.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EngineCoolantCapacity",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Engine",
   "Coolant",
   "Capacity"
  ],
  "description": "Engine coolant capacity in liters.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.MAF",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "MAF"
  ],
  "description": "Grams of air drawn into engine per second.",
  "datatype": "uint16",
  "unit": "g/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.TPS",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "TPS"
  ],
  "description": "Current throttle position.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.Torque",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Torque"
  ],
  "description": "Current engine torque. Shall be reported as 0 during engine breaking.",
  "datatype": "uint16",
  "unit": "Nm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.ECT",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "ECT"
  ],
  "description": "Engine coolant temperature.",
  "datatype": "int16",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EngineHours",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Engine",
   "Hours"
  ],
  "description": "Accumulated time during engine lifetime with 'engine speed (rpm) \u003e 0'.",
  "datatype": "float",
  "unit": "h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.MaxPower",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Max",
   "Power"
  ],
  "description": "Peak power, in kilowatts, that engine can generate.",
  "datatype": "uint16",
  "unit": "kW"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.NumberOfValvesPerCylinder",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Number",
   "Of",
   "Valves",
   "Per",
   "Cylinder"
  ],
  "description": "Number of valves per cylinder.",
  "datatype": "uint16",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EngineOilCapacity",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Engine",
   "Oil",
   "Capacity"
  ],
  "description": "Engine oil capacity in liters.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.IsRunning",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Is",
   "Running"
  ],
  "description": "Engine Running. True if engine is rotating (Speed \u003e 0).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.Bore",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Bore"
  ],
  "description": "Bore in millimetres.",
  "datatype": "float",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.Configuration",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Configuration"
  ],
  "description": "Engine configuration.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselExhaustFluid.Range",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Exhaust",
   "Fluid",
   "Range"
  ],
  "description": "Remaining range in meters of the Diesel Exhaust Fluid present in the vehicle.",
  "datatype": "uint32",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselExhaustFluid.Capacity",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Exhaust",
   "Fluid",
   "Capacity"
  ],
  "description": "Capacity in liters of the Diesel Exhaust Fluid Tank.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselExhaustFluid.IsLevelLow",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Exhaust",
   "Fluid",
   "Is",
   "Level",
   "Low"
  ],
  "description": "Indicates if the Diesel Exhaust Fluid level is low. True if level is low. Definition of low is vehicle dependent.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.DieselExhaustFluid.Level",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Diesel",
   "Exhaust",
   "Fluid",
   "Level"
  ],
  "description": "Level of the Diesel Exhaust Fluid tank as percent of capacity. 0 = empty. 100 = full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EOP",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "EOP"
  ],
  "description": "Engine oil pressure.",
  "datatype": "uint16",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EOT",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "EOT"
  ],
  "description": "Engine oil temperature.",
  "datatype": "int16",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.EngineCode",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Engine",
   "Code"
  ],
  "description": "Engine code designation, as specified by vehicle manufacturer.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.MAP",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "MAP"
  ],
  "description": "Manifold absolute pressure possibly boosted using forced induction.",
  "datatype": "uint16",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.CombustionEngine.Speed",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Combustion",
   "Engine",
   "Speed"
  ],
  "description": "Engine speed measured as rotations per minute.",
  "datatype": "uint16",
  "unit": "rpm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.AverageConsumption",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Average",
   "Consumption"
  ],
  "description": "Average consumption in liters per 100 km.",
  "datatype": "float",
  "unit": "l/100km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.HybridType",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Hybrid",
   "Type"
  ],
  "description": "Defines the hybrid type of the vehicle.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.TankCapacity",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Tank",
   "Capacity"
  ],
  "description": "Capacity of the fuel tank in liters.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.Range",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Range"
  ],
  "description": "Remaining range in meters using only liquid fuel.",
  "datatype": "uint32",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.RelativeLevel",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Relative",
   "Level"
  ],
  "description": "Level in fuel tank as percent of capacity. 0 = empty. 100 = full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.SupportedFuel",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Supported",
   "Fuel"
  ],
  "description": "Detailed information on fuels supported by the vehicle. Identifiers originating from DIN EN 16942:2021-08, appendix B, with additional suffix for octane (RON) where relevant.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.AbsoluteLevel",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Absolute",
   "Level"
  ],
  "description": "Current available fuel in the fuel tank expressed in liters.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.ConsumptionSinceStart",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Consumption",
   "Since",
   "Start"
  ],
  "description": "Fuel amount in liters consumed since start of current trip.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.InstantConsumption",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Instant",
   "Consumption"
  ],
  "description": "Current consumption in liters per 100 km.",
  "datatype": "float",
  "unit": "l/100km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.IsEngineStopStartEnabled",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Is",
   "Engine",
   "Stop",
   "Start",
   "Enabled"
  ],
  "description": "Indicates whether eco start stop is currently enabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.IsFuelLevelLow",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Is",
   "Fuel",
   "Level",
   "Low"
  ],
  "description": "Indicates that the fuel level is low (e.g. \u003c50km range).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.FuelSystem.SupportedFuelTypes",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Fuel",
   "System",
   "Supported",
   "Fuel",
   "Types"
  ],
  "description": "High level information of fuel types supported",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Powertrain.Range",
  "lextokens": [
   "Vehicle",
   "Powertrain",
   "Range"
  ],
  "description": "Remaining range in meters using all energy sources available in the vehicle.",
  "datatype": "uint32",
  "unit": "m"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Acceleration.Lateral",
  "lextokens": [
   "Vehicle",
   "Acceleration",
   "Lateral"
  ],
  "description": "Vehicle acceleration in Y (lateral acceleration).",
  "datatype": "float",
  "unit": "m/s^2"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Acceleration.Longitudinal",
  "lextokens": [
   "Vehicle",
   "Acceleration",
   "Longitudinal"
  ],
  "description": "Vehicle acceleration in X (longitudinal acceleration).",
  "datatype": "float",
  "unit": "m/s^2"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Acceleration.Vertical",
  "lextokens": [
   "Vehicle",
   "Acceleration",
   "Vertical"
  ],
  "description": "Vehicle acceleration in Z (vertical acceleration).",
  "datatype": "float",
  "unit": "m/s^2"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Trailer.IsConnected",
  "lextokens": [
   "Vehicle",
   "Trailer",
   "Is",
   "Connected"
  ],
  "description": "Signal indicating if trailer is connected or not.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Width",
  "lextokens": [
   "Vehicle",
   "Width"
  ],
  "description": "Overall vehicle width.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Height",
  "lextokens": [
   "Vehicle",
   "Height"
  ],
  "description": "Overall vehicle height.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.MaxTowBallWeight",
  "lextokens": [
   "Vehicle",
   "Max",
   "Tow",
   "Ball",
   "Weight"
  ],
  "description": "Maximum vertical weight on the tow ball of a trailer.",
  "datatype": "uint16",
  "unit": "kg"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.RoofLoad",
  "lextokens": [
   "Vehicle",
   "Roof",
   "Load"
  ],
  "description": "The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.",
  "datatype": "int16",
  "unit": "kg"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Service.DistanceToService",
  "lextokens": [
   "Vehicle",
   "Service",
   "Distance",
   "To",
   "Service"
  ],
  "description": "Remaining distance to service (of any kind). Negative values indicate service overdue.",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Service.IsServiceDue",
  "lextokens": [
   "Vehicle",
   "Service",
   "Is",
   "Service",
   "Due"
  ],
  "description": "Indicates if vehicle needs service (of any kind). True = Service needed now or in the near future. False = No known need for service.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Service.TimeToService",
  "lextokens": [
   "Vehicle",
   "Service",
   "Time",
   "To",
   "Service"
  ],
  "description": "Remaining time to service (of any kind). Negative values indicate service overdue.",
  "datatype": "int32",
  "unit": "s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.GrossWeight",
  "lextokens": [
   "Vehicle",
   "Gross",
   "Weight"
  ],
  "description": "Curb weight of vehicle, including all liquids and full tank of fuel and full load of cargo and passengers.",
  "datatype": "uint16",
  "unit": "kg"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CargoVolume",
  "lextokens": [
   "Vehicle",
   "Cargo",
   "Volume"
  ],
  "description": "The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.",
  "datatype": "float",
  "unit": "l"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.IsHandsOnWheel",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Is",
   "Hands",
   "On",
   "Wheel"
  ],
  "description": "Are the driver's hands on the steering wheel or not?",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.AttentiveProbability",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Attentive",
   "Probability"
  ],
  "description": "Probability of attentiveness of the driver.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.DistractionLevel",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Distraction",
   "Level"
  ],
  "description": "Distraction level of the driver, which can be evaluated by multiple factors e.g. driving situation, acoustical or optical signals inside the cockpit, ongoing phone calls.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.FatigueLevel",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Fatigue",
   "Level"
  ],
  "description": "Fatigue level of the driver, which can be evaluated by multiple factors e.g. trip time, behaviour of steering, eye status.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.HeartRate",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Heart",
   "Rate"
  ],
  "description": "Heart rate of the driver.",
  "datatype": "uint16",
  "unit": "bpm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Driver.IsEyesOnRoad",
  "lextokens": [
   "Vehicle",
   "Driver",
   "Is",
   "Eyes",
   "On",
   "Road"
  ],
  "description": "Has driver the eyes on road or not?",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.EmissionsCO2",
  "lextokens": [
   "Vehicle",
   "Emissions",
   "C",
   "O2"
  ],
  "description": "The CO2 emissions.",
  "datatype": "int16",
  "unit": "g/km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.IsMoving",
  "lextokens": [
   "Vehicle",
   "Is",
   "Moving"
  ],
  "description": "Indicates whether the vehicle is stationary or moving.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.LowVoltageBattery.CurrentCurrent",
  "lextokens": [
   "Vehicle",
   "Low",
   "Voltage",
   "Battery",
   "Current",
   "Current"
  ],
  "description": "Current current flowing in/out of the low voltage battery. Positive = Current flowing in to battery, e.g. during charging or driving. Negative = Current flowing out of battery, e.g. when using the battery to start a combustion engine.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.LowVoltageBattery.CurrentVoltage",
  "lextokens": [
   "Vehicle",
   "Low",
   "Voltage",
   "Battery",
   "Current",
   "Voltage"
  ],
  "description": "Current Voltage of the low voltage battery.",
  "datatype": "float",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.LowVoltageBattery.NominalCapacity",
  "lextokens": [
   "Vehicle",
   "Low",
   "Voltage",
   "Battery",
   "Nominal",
   "Capacity"
  ],
  "description": "Nominal capacity of the low voltage battery.",
  "datatype": "uint16",
  "unit": "Ah"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.LowVoltageBattery.NominalVoltage",
  "lextokens": [
   "Vehicle",
   "Low",
   "Voltage",
   "Battery",
   "Nominal",
   "Voltage"
  ],
  "description": "Nominal Voltage of the battery.",
  "datatype": "uint16",
  "unit": "V"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.MaxTowWeight",
  "lextokens": [
   "Vehicle",
   "Max",
   "Tow",
   "Weight"
  ],
  "description": "Maximum weight of trailer.",
  "datatype": "uint16",
  "unit": "kg"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.TraveledDistance",
  "lextokens": [
   "Vehicle",
   "Traveled",
   "Distance"
  ],
  "description": "Odometer reading, total distance traveled during the lifetime of the vehicle.",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.AverageSpeed",
  "lextokens": [
   "Vehicle",
   "Average",
   "Speed"
  ],
  "description": "Average speed for the current trip.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.TraveledDistanceSinceStart",
  "lextokens": [
   "Vehicle",
   "Traveled",
   "Distance",
   "Since",
   "Start"
  ],
  "description": "Distance traveled since start of current trip.",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Wheelbase",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Wheelbase"
  ],
  "description": "Overall wheelbase, in mm.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Accelerator.PedalPosition",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Accelerator",
   "Pedal",
   "Position"
  ],
  "description": "Accelerator pedal position as percent. 0 = Not depressed. 100 = Fully depressed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.TireWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Tire",
   "Width"
  ],
  "description": "Nominal section width of tires, in mm, as per ETRTO / TRA standard.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.WheelCount",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Count"
  ],
  "description": "Number of wheels on the axle",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.WheelWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Width"
  ],
  "description": "Width of wheels (rims without tires), in inches, as per ETRTO / TRA standard.",
  "datatype": "float",
  "unit": "inch"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.AxleWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Axle",
   "Width"
  ],
  "description": "The lateral distance between the wheel mounting faces, measured along the spindle axis.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.TireAspectRatio",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Tire",
   "Aspect",
   "Ratio"
  ],
  "description": "Aspect ratio between tire section height and tire section width, as per ETRTO / TRA standard.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.TireDiameter",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Tire",
   "Diameter"
  ],
  "description": "Outer diameter of tires, in inches, as per ETRTO / TRA standard.",
  "datatype": "float",
  "unit": "inch"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Brake.FluidLevel",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Brake",
   "Fluid",
   "Level"
  ],
  "description": "Brake fluid level as percent. 0 = Empty. 100 = Full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Brake.IsBrakesWorn",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Brake",
   "Is",
   "Brakes",
   "Worn"
  ],
  "description": "Brake pad wear status. True = Worn. False = Not Worn.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Brake.IsFluidLevelLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Brake",
   "Is",
   "Fluid",
   "Level",
   "Low"
  ],
  "description": "Brake fluid level status. True = Brake fluid level low. False = Brake fluid level OK.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Brake.PadWear",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Brake",
   "Pad",
   "Wear"
  ],
  "description": "Brake pad wear as percent. 0 = No Wear. 100 = Worn.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Speed",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Speed"
  ],
  "description": "Rotational speed of a vehicle's wheel.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Tire.Temperature",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Tire",
   "Temperature"
  ],
  "description": "Tire temperature in Celsius.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Tire.IsPressureLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Tire",
   "Is",
   "Pressure",
   "Low"
  ],
  "description": "Tire Pressure Status. True = Low tire pressure. False = Good tire pressure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Left.Tire.Pressure",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Left",
   "Tire",
   "Pressure"
  ],
  "description": "Tire pressure in kilo-Pascal.",
  "datatype": "uint16",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Brake.IsFluidLevelLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Brake",
   "Is",
   "Fluid",
   "Level",
   "Low"
  ],
  "description": "Brake fluid level status. True = Brake fluid level low. False = Brake fluid level OK.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Brake.PadWear",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Brake",
   "Pad",
   "Wear"
  ],
  "description": "Brake pad wear as percent. 0 = No Wear. 100 = Worn.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Brake.FluidLevel",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Brake",
   "Fluid",
   "Level"
  ],
  "description": "Brake fluid level as percent. 0 = Empty. 100 = Full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Brake.IsBrakesWorn",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Brake",
   "Is",
   "Brakes",
   "Worn"
  ],
  "description": "Brake pad wear status. True = Worn. False = Not Worn.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Speed",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Speed"
  ],
  "description": "Rotational speed of a vehicle's wheel.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Tire.IsPressureLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Tire",
   "Is",
   "Pressure",
   "Low"
  ],
  "description": "Tire Pressure Status. True = Low tire pressure. False = Good tire pressure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Tire.Pressure",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Tire",
   "Pressure"
  ],
  "description": "Tire pressure in kilo-Pascal.",
  "datatype": "uint16",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.Wheel.Right.Tire.Temperature",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Right",
   "Tire",
   "Temperature"
  ],
  "description": "Tire temperature in Celsius.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.WheelDiameter",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Wheel",
   "Diameter"
  ],
  "description": "Diameter of wheels (rims without tires), in inches, as per ETRTO / TRA standard.",
  "datatype": "float",
  "unit": "inch"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.SteeringAngle",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Steering",
   "Angle"
  ],
  "description": "Single track two-axle model steering angle. Angle according to ISO 8855. Positive = degrees to the left. Negative = degrees to the right.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.TrackWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Track",
   "Width"
  ],
  "description": "The lateral distance between the centers of the wheels, measured along the spindle, or axle axis. If there are dual rear wheels, measure from the midway points between the inner and outer tires.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row1.TreadWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row1",
   "Tread",
   "Width"
  ],
  "description": "The lateral distance between the centerlines of the base tires at ground, including camber angle. If there are dual rear wheels, measure from the midway points between the inner and outer tires.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.AxleWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Axle",
   "Width"
  ],
  "description": "The lateral distance between the wheel mounting faces, measured along the spindle axis.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.TireDiameter",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Tire",
   "Diameter"
  ],
  "description": "Outer diameter of tires, in inches, as per ETRTO / TRA standard.",
  "datatype": "float",
  "unit": "inch"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.TireWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Tire",
   "Width"
  ],
  "description": "Nominal section width of tires, in mm, as per ETRTO / TRA standard.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.TrackWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Track",
   "Width"
  ],
  "description": "The lateral distance between the centers of the wheels, measured along the spindle, or axle axis. If there are dual rear wheels, measure from the midway points between the inner and outer tires.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Brake.IsBrakesWorn",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Brake",
   "Is",
   "Brakes",
   "Worn"
  ],
  "description": "Brake pad wear status. True = Worn. False = Not Worn.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Brake.IsFluidLevelLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Brake",
   "Is",
   "Fluid",
   "Level",
   "Low"
  ],
  "description": "Brake fluid level status. True = Brake fluid level low. False = Brake fluid level OK.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Brake.PadWear",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Brake",
   "Pad",
   "Wear"
  ],
  "description": "Brake pad wear as percent. 0 = No Wear. 100 = Worn.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Brake.FluidLevel",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Brake",
   "Fluid",
   "Level"
  ],
  "description": "Brake fluid level as percent. 0 = Empty. 100 = Full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Speed",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Speed"
  ],
  "description": "Rotational speed of a vehicle's wheel.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Tire.IsPressureLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Tire",
   "Is",
   "Pressure",
   "Low"
  ],
  "description": "Tire Pressure Status. True = Low tire pressure. False = Good tire pressure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Tire.Pressure",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Tire",
   "Pressure"
  ],
  "description": "Tire pressure in kilo-Pascal.",
  "datatype": "uint16",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Left.Tire.Temperature",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Left",
   "Tire",
   "Temperature"
  ],
  "description": "Tire temperature in Celsius.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Speed",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Speed"
  ],
  "description": "Rotational speed of a vehicle's wheel.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Tire.IsPressureLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Tire",
   "Is",
   "Pressure",
   "Low"
  ],
  "description": "Tire Pressure Status. True = Low tire pressure. False = Good tire pressure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Tire.Pressure",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Tire",
   "Pressure"
  ],
  "description": "Tire pressure in kilo-Pascal.",
  "datatype": "uint16",
  "unit": "kPa"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Tire.Temperature",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Tire",
   "Temperature"
  ],
  "description": "Tire temperature in Celsius.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Brake.FluidLevel",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Brake",
   "Fluid",
   "Level"
  ],
  "description": "Brake fluid level as percent. 0 = Empty. 100 = Full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Brake.IsBrakesWorn",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Brake",
   "Is",
   "Brakes",
   "Worn"
  ],
  "description": "Brake pad wear status. True = Worn. False = Not Worn.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Brake.IsFluidLevelLow",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Brake",
   "Is",
   "Fluid",
   "Level",
   "Low"
  ],
  "description": "Brake fluid level status. True = Brake fluid level low. False = Brake fluid level OK.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.Wheel.Right.Brake.PadWear",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Right",
   "Brake",
   "Pad",
   "Wear"
  ],
  "description": "Brake pad wear as percent. 0 = No Wear. 100 = Worn.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.WheelDiameter",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Diameter"
  ],
  "description": "Diameter of wheels (rims without tires), in inches, as per ETRTO / TRA standard.",
  "datatype": "float",
  "unit": "inch"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.SteeringAngle",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Steering",
   "Angle"
  ],
  "description": "Single track two-axle model steering angle. Angle according to ISO 8855. Positive = degrees to the left. Negative = degrees to the right.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.TireAspectRatio",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Tire",
   "Aspect",
   "Ratio"
  ],
  "description": "Aspect ratio between tire section height and tire section width, as per ETRTO / TRA standard.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.TreadWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Tread",
   "Width"
  ],
  "description": "The lateral distance between the centerlines of the base tires at ground, including camber angle. If there are dual rear wheels, measure from the midway points between the inner and outer tires.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.WheelCount",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Count"
  ],
  "description": "Number of wheels on the axle",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Axle.Row2.WheelWidth",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Row2",
   "Wheel",
   "Width"
  ],
  "description": "Width of wheels (rims without tires), in inches, as per ETRTO / TRA standard.",
  "datatype": "float",
  "unit": "inch"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.AxleCount",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Axle",
   "Count"
  ],
  "description": "Number of axles on the vehicle",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Brake.IsDriverEmergencyBrakingDetected",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Brake",
   "Is",
   "Driver",
   "Emergency",
   "Braking",
   "Detected"
  ],
  "description": "Indicates if emergency braking initiated by driver is detected. True = Emergency braking detected. False = Emergency braking not detected.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.Brake.PedalPosition",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Brake",
   "Pedal",
   "Position"
  ],
  "description": "Brake pedal position as percent. 0 = Not depressed. 100 = Fully depressed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.ParkingBrake.IsAutoApplyEnabled",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Parking",
   "Brake",
   "Is",
   "Auto",
   "Apply",
   "Enabled"
  ],
  "description": "Indicates if parking brake will be automatically engaged when the vehicle engine is turned off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.ParkingBrake.IsEngaged",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Parking",
   "Brake",
   "Is",
   "Engaged"
  ],
  "description": "Parking brake status. True = Parking Brake is Engaged. False = Parking Brake is not Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.SteeringWheel.Extension",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Steering",
   "Wheel",
   "Extension"
  ],
  "description": "Steering wheel column extension from dashboard. 0 = Closest to dashboard. 100 = Furthest from dashboard.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.SteeringWheel.Tilt",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Steering",
   "Wheel",
   "Tilt"
  ],
  "description": "Steering wheel column tilt. 0 = Lowest position. 100 = Highest position.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Chassis.SteeringWheel.Angle",
  "lextokens": [
   "Vehicle",
   "Chassis",
   "Steering",
   "Wheel",
   "Angle"
  ],
  "description": "Steering wheel angle. Positive = degrees to the left. Negative = degrees to the right.",
  "datatype": "int16",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Connectivity.IsConnectivityAvailable",
  "lextokens": [
   "Vehicle",
   "Connectivity",
   "Is",
   "Connectivity",
   "Available"
  ],
  "description": "Indicates if connectivity between vehicle and cloud is available. True = Connectivity is available. False = Connectivity is not available.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Speed",
  "lextokens": [
   "Vehicle",
   "Speed"
  ],
  "description": "Vehicle speed.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "Body",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.RearMainSpoilerPosition",
  "lextokens": [
   "Vehicle",
   "Body",
   "Rear",
   "Main",
   "Spoiler",
   "Position"
  ],
  "description": "Rear spoiler position, 0% = Spoiler fully stowed. 100% = Spoiler fully exposed.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.RefuelPosition",
  "lextokens": [
   "Vehicle",
   "Body",
   "Refuel",
   "Position"
  ],
  "description": "Location of the fuel cap or charge port.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Trunk.Front.IsLocked",
  "lextokens": [
   "Vehicle",
   "Body",
   "Trunk",
   "Front",
   "Is",
   "Locked"
  ],
  "description": "Is trunk locked or unlocked. True = Locked. False = Unlocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Trunk.Front.IsOpen",
  "lextokens": [
   "Vehicle",
   "Body",
   "Trunk",
   "Front",
   "Is",
   "Open"
  ],
  "description": "Trunk open or closed. True = Open. False = Closed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Trunk.Front.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Trunk",
   "Front",
   "Is",
   "Light",
   "On"
  ],
  "description": "Is trunk light on",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Trunk.Rear.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Trunk",
   "Rear",
   "Is",
   "Light",
   "On"
  ],
  "description": "Is trunk light on",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Trunk.Rear.IsLocked",
  "lextokens": [
   "Vehicle",
   "Body",
   "Trunk",
   "Rear",
   "Is",
   "Locked"
  ],
  "description": "Is trunk locked or unlocked. True = Locked. False = Unlocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Trunk.Rear.IsOpen",
  "lextokens": [
   "Vehicle",
   "Body",
   "Trunk",
   "Rear",
   "Is",
   "Open"
  ],
  "description": "Trunk open or closed. True = Open. False = Closed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.IsHeatingOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Is",
   "Heating",
   "On"
  ],
  "description": "Windshield heater status. False - off, True - on.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.WasherFluid.IsLevelLow",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Washer",
   "Fluid",
   "Is",
   "Level",
   "Low"
  ],
  "description": "Low level indication for washer fluid. True = Level Low. False = Level OK.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.WasherFluid.Level",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Washer",
   "Fluid",
   "Level"
  ],
  "description": "Washer fluid level as a percent. 0 = Empty. 100 = Full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.IsWipersWorn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "Is",
   "Wipers",
   "Worn"
  ],
  "description": "Wiper wear status. True = Worn, Replacement recommended or required. False = Not Worn.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.Mode",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "Mode"
  ],
  "description": "Wiper mode requested by user/driver. INTERVAL indicates intermittent wiping, with fixed time interval between each wipe. RAIN_SENSOR indicates intermittent wiping based on rain intensity.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.ActualPosition",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Actual",
   "Position"
  ],
  "description": "Actual position of main wiper blade for the wiper system relative to reference position. Location of reference position (0 degrees) and direction of positive/negative degrees is vehicle specific.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.Frequency",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Frequency"
  ],
  "description": "Wiping frequency/speed, measured in cycles per minute. The signal concerns the actual speed of the wiper blades when moving. Intervals/pauses are excluded, i.e. the value corresponds to the number of cycles that would be completed in 1 minute if wiping permanently over default range.",
  "datatype": "uint8",
  "unit": "cpm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.IsEndingWipeCycle",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Is",
   "Ending",
   "Wipe",
   "Cycle"
  ],
  "description": "Indicates if current wipe movement is completed or near completion. True = Movement is completed or near completion. Changes to RequestedPosition will be executed first after reaching previous RequestedPosition, if it has not already been reached. False = Movement is not near completion. Any change to RequestedPosition will be executed immediately. Change of direction may not be allowed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.Mode",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Mode"
  ],
  "description": "Requested mode of wiper system. STOP_HOLD means that the wipers shall move to position given by TargetPosition and then hold the position. WIPE means that wipers shall move to the position given by TargetPosition and then hold the position if no new TargetPosition is requested. PLANT_MODE means that wiping is disabled. Exact behavior is vehicle specific. EMERGENCY_STOP means that wiping shall be immediately stopped without holding the position.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.TargetPosition",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Target",
   "Position"
  ],
  "description": "Requested position of main wiper blade for the wiper system relative to reference position. Location of reference position (0 degrees) and direction of positive/negative degrees is vehicle specific. System behavior when receiving TargetPosition depends on Mode and IsEndingWipeCycle. Supported values are vehicle specific and might be dynamically corrected. If IsEndingWipeCycle=True then wipers will complete current movement before actuating new TargetPosition. If IsEndingWipeCycle=False then wipers will directly change destination if the TargetPosition is changed.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.DriveCurrent",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Drive",
   "Current"
  ],
  "description": "Actual current used by wiper drive.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.IsBlocked",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Is",
   "Blocked"
  ],
  "description": "Indicates if wiper movement is blocked. True = Movement blocked. False = Movement not blocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.IsOverheated",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Is",
   "Overheated"
  ],
  "description": "Indicates if wiper system is overheated. True = Wiper system overheated. False = Wiper system not overheated.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.IsPositionReached",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Is",
   "Position",
   "Reached"
  ],
  "description": "Indicates if a requested position has been reached. IsPositionReached refers to the previous position in case the TargetPosition is updated while IsEndingWipeCycle=True. True = Current or Previous TargetPosition reached. False = Position not (yet) reached, or wipers have moved away from the reached position.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.IsWiperError",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Is",
   "Wiper",
   "Error"
  ],
  "description": "Indicates system failure. True if wiping is disabled due to system failure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.System.IsWiping",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "System",
   "Is",
   "Wiping"
  ],
  "description": "Indicates wiper movement. True if wiper blades are moving. Change of direction shall be considered as IsWiping if wipers will continue to move directly after the change of direction.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.WiperWear",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "Wiper",
   "Wear"
  ],
  "description": "Wiper wear as percent. 0 = No Wear. 100 = Worn. Replacement required. Method for calculating or estimating wiper wear is vehicle specific. For windshields with multiple wipers the wear reported shall correspond to the most worn wiper.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Front.Wiping.Intensity",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Front",
   "Wiping",
   "Intensity"
  ],
  "description": "Relative intensity/sensitivity for interval and rain sensor mode as requested by user/driver. Has no significance if Windshield.Wiping.Mode is OFF/SLOW/MEDIUM/FAST 0 - wipers inactive. 1 - minimum intensity (lowest frequency/sensitivity, longest interval). 2/3/4/... - higher intensity (higher frequency/sensitivity, shorter interval). Maximum value supported is vehicle specific.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.WasherFluid.IsLevelLow",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Washer",
   "Fluid",
   "Is",
   "Level",
   "Low"
  ],
  "description": "Low level indication for washer fluid. True = Level Low. False = Level OK.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.WasherFluid.Level",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Washer",
   "Fluid",
   "Level"
  ],
  "description": "Washer fluid level as a percent. 0 = Empty. 100 = Full.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.Intensity",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "Intensity"
  ],
  "description": "Relative intensity/sensitivity for interval and rain sensor mode as requested by user/driver. Has no significance if Windshield.Wiping.Mode is OFF/SLOW/MEDIUM/FAST 0 - wipers inactive. 1 - minimum intensity (lowest frequency/sensitivity, longest interval). 2/3/4/... - higher intensity (higher frequency/sensitivity, shorter interval). Maximum value supported is vehicle specific.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.IsWipersWorn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "Is",
   "Wipers",
   "Worn"
  ],
  "description": "Wiper wear status. True = Worn, Replacement recommended or required. False = Not Worn.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.Mode",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "Mode"
  ],
  "description": "Wiper mode requested by user/driver. INTERVAL indicates intermittent wiping, with fixed time interval between each wipe. RAIN_SENSOR indicates intermittent wiping based on rain intensity.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.IsEndingWipeCycle",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Is",
   "Ending",
   "Wipe",
   "Cycle"
  ],
  "description": "Indicates if current wipe movement is completed or near completion. True = Movement is completed or near completion. Changes to RequestedPosition will be executed first after reaching previous RequestedPosition, if it has not already been reached. False = Movement is not near completion. Any change to RequestedPosition will be executed immediately. Change of direction may not be allowed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.IsOverheated",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Is",
   "Overheated"
  ],
  "description": "Indicates if wiper system is overheated. True = Wiper system overheated. False = Wiper system not overheated.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.TargetPosition",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Target",
   "Position"
  ],
  "description": "Requested position of main wiper blade for the wiper system relative to reference position. Location of reference position (0 degrees) and direction of positive/negative degrees is vehicle specific. System behavior when receiving TargetPosition depends on Mode and IsEndingWipeCycle. Supported values are vehicle specific and might be dynamically corrected. If IsEndingWipeCycle=True then wipers will complete current movement before actuating new TargetPosition. If IsEndingWipeCycle=False then wipers will directly change destination if the TargetPosition is changed.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.Mode",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Mode"
  ],
  "description": "Requested mode of wiper system. STOP_HOLD means that the wipers shall move to position given by TargetPosition and then hold the position. WIPE means that wipers shall move to the position given by TargetPosition and then hold the position if no new TargetPosition is requested. PLANT_MODE means that wiping is disabled. Exact behavior is vehicle specific. EMERGENCY_STOP means that wiping shall be immediately stopped without holding the position.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.ActualPosition",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Actual",
   "Position"
  ],
  "description": "Actual position of main wiper blade for the wiper system relative to reference position. Location of reference position (0 degrees) and direction of positive/negative degrees is vehicle specific.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.DriveCurrent",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Drive",
   "Current"
  ],
  "description": "Actual current used by wiper drive.",
  "datatype": "float",
  "unit": "A"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.Frequency",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Frequency"
  ],
  "description": "Wiping frequency/speed, measured in cycles per minute. The signal concerns the actual speed of the wiper blades when moving. Intervals/pauses are excluded, i.e. the value corresponds to the number of cycles that would be completed in 1 minute if wiping permanently over default range.",
  "datatype": "uint8",
  "unit": "cpm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.IsBlocked",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Is",
   "Blocked"
  ],
  "description": "Indicates if wiper movement is blocked. True = Movement blocked. False = Movement not blocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.IsPositionReached",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Is",
   "Position",
   "Reached"
  ],
  "description": "Indicates if a requested position has been reached. IsPositionReached refers to the previous position in case the TargetPosition is updated while IsEndingWipeCycle=True. True = Current or Previous TargetPosition reached. False = Position not (yet) reached, or wipers have moved away from the reached position.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.IsWiperError",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Is",
   "Wiper",
   "Error"
  ],
  "description": "Indicates system failure. True if wiping is disabled due to system failure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.System.IsWiping",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "System",
   "Is",
   "Wiping"
  ],
  "description": "Indicates wiper movement. True if wiper blades are moving. Change of direction shall be considered as IsWiping if wipers will continue to move directly after the change of direction.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.Wiping.WiperWear",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Wiping",
   "Wiper",
   "Wear"
  ],
  "description": "Wiper wear as percent. 0 = No Wear. 100 = Worn. Replacement required. Method for calculating or estimating wiper wear is vehicle specific. For windshields with multiple wipers the wear reported shall correspond to the most worn wiper.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Windshield.Rear.IsHeatingOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Windshield",
   "Rear",
   "Is",
   "Heating",
   "On"
  ],
  "description": "Windshield heater status. False - off, True - on.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.BodyType",
  "lextokens": [
   "Vehicle",
   "Body",
   "Body",
   "Type"
  ],
  "description": "Body type code as defined by ISO 3779.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Hood.IsOpen",
  "lextokens": [
   "Vehicle",
   "Body",
   "Hood",
   "Is",
   "Open"
  ],
  "description": "Hood open or closed. True = Open. False = Closed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Mirrors.DriverSide.IsHeatingOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Mirrors",
   "Driver",
   "Side",
   "Is",
   "Heating",
   "On"
  ],
  "description": "Mirror Heater on or off. True = Heater On. False = Heater Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Mirrors.DriverSide.Pan",
  "lextokens": [
   "Vehicle",
   "Body",
   "Mirrors",
   "Driver",
   "Side",
   "Pan"
  ],
  "description": "Mirror pan as a percent. 0 = Center Position. 100 = Fully Left Position. -100 = Fully Right Position.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Mirrors.DriverSide.Tilt",
  "lextokens": [
   "Vehicle",
   "Body",
   "Mirrors",
   "Driver",
   "Side",
   "Tilt"
  ],
  "description": "Mirror tilt as a percent. 0 = Center Position. 100 = Fully Upward Position. -100 = Fully Downward Position.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Mirrors.PassengerSide.IsHeatingOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Mirrors",
   "Passenger",
   "Side",
   "Is",
   "Heating",
   "On"
  ],
  "description": "Mirror Heater on or off. True = Heater On. False = Heater Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Mirrors.PassengerSide.Pan",
  "lextokens": [
   "Vehicle",
   "Body",
   "Mirrors",
   "Passenger",
   "Side",
   "Pan"
  ],
  "description": "Mirror pan as a percent. 0 = Center Position. 100 = Fully Left Position. -100 = Fully Right Position.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Mirrors.PassengerSide.Tilt",
  "lextokens": [
   "Vehicle",
   "Body",
   "Mirrors",
   "Passenger",
   "Side",
   "Tilt"
  ],
  "description": "Mirror tilt as a percent. 0 = Center Position. 100 = Fully Upward Position. -100 = Fully Downward Position.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Horn.IsActive",
  "lextokens": [
   "Vehicle",
   "Body",
   "Horn",
   "Is",
   "Active"
  ],
  "description": "Horn active or inactive. True = Active. False = Inactive.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Brake.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Brake",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Brake.IsActive",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Brake",
   "Is",
   "Active"
  ],
  "description": "Indicates if break-light is active. INACTIVE means lights are off. ACTIVE means lights are on. ADAPTIVE means that break-light is indicating emergency-breaking.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.DirectionIndicator.Left.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Direction",
   "Indicator",
   "Left",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.DirectionIndicator.Left.IsSignaling",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Direction",
   "Indicator",
   "Left",
   "Is",
   "Signaling"
  ],
  "description": "Indicates if light is signaling or off. True = signaling. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.DirectionIndicator.Right.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Direction",
   "Indicator",
   "Right",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.DirectionIndicator.Right.IsSignaling",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Direction",
   "Indicator",
   "Right",
   "Is",
   "Signaling"
  ],
  "description": "Indicates if light is signaling or off. True = signaling. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.IsHighBeamSwitchOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Is",
   "High",
   "Beam",
   "Switch",
   "On"
  ],
  "description": "Status of the high beam switch. True = high beam enabled. False = high beam not enabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.LicensePlate.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "License",
   "Plate",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.LicensePlate.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "License",
   "Plate",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.LightSwitch",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Light",
   "Switch"
  ],
  "description": "Status of the vehicle main light switch.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Parking.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Parking",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Parking.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Parking",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Running.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Running",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Running.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Running",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Backup.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Backup",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Backup.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Backup",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Beam.High.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Beam",
   "High",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Beam.High.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Beam",
   "High",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Beam.Low.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Beam",
   "Low",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Beam.Low.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Beam",
   "Low",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Fog.Front.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Fog",
   "Front",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Fog.Front.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Fog",
   "Front",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Fog.Rear.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Fog",
   "Rear",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Fog.Rear.IsOn",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Fog",
   "Rear",
   "Is",
   "On"
  ],
  "description": "Indicates if light is on or off. True = On. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Hazard.IsDefect",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Hazard",
   "Is",
   "Defect"
  ],
  "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Lights.Hazard.IsSignaling",
  "lextokens": [
   "Vehicle",
   "Body",
   "Lights",
   "Hazard",
   "Is",
   "Signaling"
  ],
  "description": "Indicates if light is signaling or off. True = signaling. False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Body.Raindetection.Intensity",
  "lextokens": [
   "Vehicle",
   "Body",
   "Raindetection",
   "Intensity"
  ],
  "description": "Rain intensity. 0 = Dry, No Rain. 100 = Covered.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.PerceivedAmbientLight",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Perceived",
   "Ambient",
   "Light"
  ],
  "description": "The percentage of ambient light that is measured (e.g., by a sensor) inside the cabin. 0 = No ambient light. 100 = Full brightness.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row1.DriverSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row1.DriverSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row1",
   "Driver",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row1.DriverSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row1",
   "Driver",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row1.PassengerSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row1.PassengerSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row1",
   "Passenger",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row1.PassengerSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row1",
   "Passenger",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row2.DriverSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row2",
   "Driver",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row2.DriverSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row2",
   "Driver",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row2.DriverSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row2.PassengerSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row2",
   "Passenger",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row2.PassengerSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row2.PassengerSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row2",
   "Passenger",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row3.DriverSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row3",
   "Driver",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row3.DriverSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row3",
   "Driver",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row3.DriverSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row3",
   "Driver",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row3.PassengerSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row3",
   "Passenger",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row3.PassengerSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row3",
   "Passenger",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row3.PassengerSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row3",
   "Passenger",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row4.DriverSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row4",
   "Driver",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row4.DriverSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row4",
   "Driver",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row4.DriverSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row4",
   "Driver",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row4.PassengerSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row4",
   "Passenger",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row4.PassengerSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row4",
   "Passenger",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.Spotlight.Row4.PassengerSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Spotlight",
   "Row4",
   "Passenger",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row1.DriverSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row1",
   "Driver",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row1.DriverSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row1",
   "Driver",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row1.DriverSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row1.PassengerSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row1.PassengerSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row1",
   "Passenger",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row1.PassengerSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row1",
   "Passenger",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row2.PassengerSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row2",
   "Passenger",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row2.PassengerSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row2",
   "Passenger",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row2.PassengerSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row2.DriverSide.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row2",
   "Driver",
   "Side",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row2.DriverSide.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row2",
   "Driver",
   "Side",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.AmbientLight.Row2.DriverSide.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Ambient",
   "Light",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.InteractiveLightBar.Color",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Interactive",
   "Light",
   "Bar",
   "Color"
  ],
  "description": "Hexadecimal color code represented as a 3-byte RGB (i.e. Red, Green, and Blue) value preceded by a hash symbol \"#\". Allowed range \"#000000\" to \"#FFFFFF\".",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.InteractiveLightBar.Effect",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Interactive",
   "Light",
   "Bar",
   "Effect"
  ],
  "description": "Light effect selection from a predefined set of allowed values.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.InteractiveLightBar.Intensity",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Interactive",
   "Light",
   "Bar",
   "Intensity"
  ],
  "description": "How much of the maximum possible brightness of the light is used. 1 = Maximum attenuation, 100 = No attenuation (i.e. full brightness).",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.InteractiveLightBar.IsLightOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Interactive",
   "Light",
   "Bar",
   "Is",
   "Light",
   "On"
  ],
  "description": "Indicates whether the light is turned on. True = On, False = Off.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.IsDomeOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Is",
   "Dome",
   "On"
  ],
  "description": "Is central dome light on",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Light.IsGloveBoxOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Light",
   "Is",
   "Glove",
   "Box",
   "On"
  ],
  "description": "Is glove box light on",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.RearviewMirror.DimmingLevel",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Rearview",
   "Mirror",
   "Dimming",
   "Level"
  ],
  "description": "Dimming level of rear-view mirror. 0 = Undimmed. 100 = Fully dimmed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Seat forward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Massage.IsDecreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Decrease",
   "Engaged"
  ],
  "description": "Decrease massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Massage.IsIncreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Increase",
   "Engaged"
  ],
  "description": "Increase massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.IsReclineBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Backward",
   "Engaged"
  ],
  "description": "Backrest recline backward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.IsReclineForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Forward",
   "Engaged"
  ],
  "description": "Backrest recline forward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.Lumbar.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Lumbar down switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.Lumbar.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.Lumbar.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.Lumbar.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Lumbar up switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.SideBolster.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Backrest.SideBolster.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Headrest.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Head rest backward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Headrest.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Head rest down switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Headrest.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Head rest forward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Headrest.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Head rest up switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsCoolerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Cooler",
   "Engaged"
  ],
  "description": "Cooler switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsTiltForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Forward",
   "Engaged"
  ],
  "description": "Tilt forward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Seat up switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsWarmerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Warmer",
   "Engaged"
  ],
  "description": "Warmer switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Seating.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Is switch to decrease seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.Seating.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Is switch to increase seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Seat backward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Seat down switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Switch.IsTiltBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Backward",
   "Engaged"
  ],
  "description": "Tilt backward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Backrest.Lumbar.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Backrest",
   "Lumbar",
   "Height"
  ],
  "description": "Height of lumbar support. Position is relative within available movable range of the lumbar support. 0 = Lowermost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Backrest.Lumbar.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Backrest",
   "Lumbar",
   "Support"
  ],
  "description": "Lumbar support (in/out position). 0 = Innermost position. 100 = Outermost position.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Backrest.Recline",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Backrest",
   "Recline"
  ],
  "description": "Backrest recline compared to seat z-axis (seat vertical axis). 0 degrees = Upright/Vertical backrest. Negative degrees for forward recline. Positive degrees for backward recline.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Backrest.SideBolster.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Backrest",
   "Side",
   "Bolster",
   "Support"
  ],
  "description": "Side bolster support. 0 = Minimum support (widest side bolster setting). 100 = Maximum support.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Headrest.Angle",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Headrest",
   "Angle"
  ],
  "description": "Headrest angle, relative to backrest, 0 degrees if parallel to backrest, Positive degrees = tilted forward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Headrest.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Headrest",
   "Height"
  ],
  "description": "Position of headrest relative to movable range of the head rest. 0 = Bottommost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Position"
  ],
  "description": "Seat position on vehicle x-axis. Position is relative to the frontmost position supported by the seat. 0 = Frontmost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Seating.Length",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Seating",
   "Length"
  ],
  "description": "Length adjustment of seating. 0 = Adjustable part of seating in rearmost position (Shortest length of seating).",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.IsOccupied",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Occupied"
  ],
  "description": "Does the seat have a passenger in it.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Massage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Massage"
  ],
  "description": "Seat massage level. 0 = off. 100 = max massage.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Occupant.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Occupant",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Occupant.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Occupant",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Tilt",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Tilt"
  ],
  "description": "Tilting of seat (seating and backrest) relative to vehicle x-axis. 0 = seat bottom is flat, seat bottom and vehicle x-axis are parallel. Positive degrees = seat tilted backwards, seat x-axis tilted upward, seat z-axis is tilted backward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Airbag.IsDeployed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Airbag",
   "Is",
   "Deployed"
  ],
  "description": "Airbag deployment status. True = Airbag deployed. False = Airbag not deployed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Heating",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Heating"
  ],
  "description": "Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Height"
  ],
  "description": "Seat position on vehicle z-axis. Position is relative within available movable range of the seating. 0 = Lowermost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.DriverSide.IsBelted",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Belted"
  ],
  "description": "Is the belt engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Seat up switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Massage.IsDecreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Massage",
   "Is",
   "Decrease",
   "Engaged"
  ],
  "description": "Decrease massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Massage.IsIncreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Massage",
   "Is",
   "Increase",
   "Engaged"
  ],
  "description": "Increase massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.IsReclineForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Forward",
   "Engaged"
  ],
  "description": "Backrest recline forward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.Lumbar.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Lumbar down switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.Lumbar.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.Lumbar.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.Lumbar.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Lumbar up switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.SideBolster.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.SideBolster.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Backrest.IsReclineBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Backward",
   "Engaged"
  ],
  "description": "Backrest recline backward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Headrest.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Head rest forward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Headrest.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Head rest up switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Headrest.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Head rest backward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Headrest.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Head rest down switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Seat backward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsTiltBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Tilt",
   "Backward",
   "Engaged"
  ],
  "description": "Tilt backward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsTiltForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Tilt",
   "Forward",
   "Engaged"
  ],
  "description": "Tilt forward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsWarmerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Warmer",
   "Engaged"
  ],
  "description": "Warmer switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Seating.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Seating",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Is switch to decrease seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.Seating.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Seating",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Is switch to increase seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsCoolerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Cooler",
   "Engaged"
  ],
  "description": "Cooler switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Seat down switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Switch.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Switch",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Seat forward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Tilt",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Tilt"
  ],
  "description": "Tilting of seat (seating and backrest) relative to vehicle x-axis. 0 = seat bottom is flat, seat bottom and vehicle x-axis are parallel. Positive degrees = seat tilted backwards, seat x-axis tilted upward, seat z-axis is tilted backward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Height"
  ],
  "description": "Seat position on vehicle z-axis. Position is relative within available movable range of the seating. 0 = Lowermost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.IsOccupied",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Is",
   "Occupied"
  ],
  "description": "Does the seat have a passenger in it.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Massage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Massage"
  ],
  "description": "Seat massage level. 0 = off. 100 = max massage.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Occupant.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Occupant",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Occupant.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Occupant",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.IsBelted",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Is",
   "Belted"
  ],
  "description": "Is the belt engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Position"
  ],
  "description": "Seat position on vehicle x-axis. Position is relative to the frontmost position supported by the seat. 0 = Frontmost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Seating.Length",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Seating",
   "Length"
  ],
  "description": "Length adjustment of seating. 0 = Adjustable part of seating in rearmost position (Shortest length of seating).",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Airbag.IsDeployed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Airbag",
   "Is",
   "Deployed"
  ],
  "description": "Airbag deployment status. True = Airbag deployed. False = Airbag not deployed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Backrest.Lumbar.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Backrest",
   "Lumbar",
   "Support"
  ],
  "description": "Lumbar support (in/out position). 0 = Innermost position. 100 = Outermost position.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Backrest.Lumbar.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Backrest",
   "Lumbar",
   "Height"
  ],
  "description": "Height of lumbar support. Position is relative within available movable range of the lumbar support. 0 = Lowermost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Backrest.Recline",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Backrest",
   "Recline"
  ],
  "description": "Backrest recline compared to seat z-axis (seat vertical axis). 0 degrees = Upright/Vertical backrest. Negative degrees for forward recline. Positive degrees for backward recline.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Backrest.SideBolster.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Backrest",
   "Side",
   "Bolster",
   "Support"
  ],
  "description": "Side bolster support. 0 = Minimum support (widest side bolster setting). 100 = Maximum support.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Headrest.Angle",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Headrest",
   "Angle"
  ],
  "description": "Headrest angle, relative to backrest, 0 degrees if parallel to backrest, Positive degrees = tilted forward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Headrest.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Headrest",
   "Height"
  ],
  "description": "Position of headrest relative to movable range of the head rest. 0 = Bottommost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.Middle.Heating",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Middle",
   "Heating"
  ],
  "description": "Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Backrest.SideBolster.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Backrest",
   "Side",
   "Bolster",
   "Support"
  ],
  "description": "Side bolster support. 0 = Minimum support (widest side bolster setting). 100 = Maximum support.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Backrest.Lumbar.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Backrest",
   "Lumbar",
   "Height"
  ],
  "description": "Height of lumbar support. Position is relative within available movable range of the lumbar support. 0 = Lowermost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Backrest.Lumbar.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Backrest",
   "Lumbar",
   "Support"
  ],
  "description": "Lumbar support (in/out position). 0 = Innermost position. 100 = Outermost position.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Backrest.Recline",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Backrest",
   "Recline"
  ],
  "description": "Backrest recline compared to seat z-axis (seat vertical axis). 0 degrees = Upright/Vertical backrest. Negative degrees for forward recline. Positive degrees for backward recline.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Height"
  ],
  "description": "Seat position on vehicle z-axis. Position is relative within available movable range of the seating. 0 = Lowermost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.IsBelted",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Belted"
  ],
  "description": "Is the belt engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Seating.Length",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Seating",
   "Length"
  ],
  "description": "Length adjustment of seating. 0 = Adjustable part of seating in rearmost position (Shortest length of seating).",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsTiltBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Backward",
   "Engaged"
  ],
  "description": "Tilt backward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsTiltForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Forward",
   "Engaged"
  ],
  "description": "Tilt forward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Seat up switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Seating.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Is switch to decrease seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Seating.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Is switch to increase seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Headrest.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Head rest down switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Headrest.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Head rest forward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Headrest.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Head rest up switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Headrest.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Head rest backward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Seat down switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Seat forward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsWarmerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Warmer",
   "Engaged"
  ],
  "description": "Warmer switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Massage.IsDecreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Decrease",
   "Engaged"
  ],
  "description": "Decrease massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Massage.IsIncreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Increase",
   "Engaged"
  ],
  "description": "Increase massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.IsReclineBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Backward",
   "Engaged"
  ],
  "description": "Backrest recline backward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.IsReclineForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Forward",
   "Engaged"
  ],
  "description": "Backrest recline forward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.Lumbar.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Lumbar down switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.Lumbar.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.Lumbar.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.Lumbar.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Lumbar up switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.SideBolster.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.Backrest.SideBolster.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Seat backward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Switch.IsCoolerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Cooler",
   "Engaged"
  ],
  "description": "Cooler switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Tilt",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Tilt"
  ],
  "description": "Tilting of seat (seating and backrest) relative to vehicle x-axis. 0 = seat bottom is flat, seat bottom and vehicle x-axis are parallel. Positive degrees = seat tilted backwards, seat x-axis tilted upward, seat z-axis is tilted backward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Airbag.IsDeployed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Airbag",
   "Is",
   "Deployed"
  ],
  "description": "Airbag deployment status. True = Airbag deployed. False = Airbag not deployed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Headrest.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Headrest",
   "Height"
  ],
  "description": "Position of headrest relative to movable range of the head rest. 0 = Bottommost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Headrest.Angle",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Headrest",
   "Angle"
  ],
  "description": "Headrest angle, relative to backrest, 0 degrees if parallel to backrest, Positive degrees = tilted forward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Heating",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Heating"
  ],
  "description": "Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.IsOccupied",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Occupied"
  ],
  "description": "Does the seat have a passenger in it.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Massage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Massage"
  ],
  "description": "Seat massage level. 0 = off. 100 = max massage.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Occupant.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Occupant",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Occupant.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Occupant",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row1.PassengerSide.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row1",
   "Passenger",
   "Side",
   "Position"
  ],
  "description": "Seat position on vehicle x-axis. Position is relative to the frontmost position supported by the seat. 0 = Frontmost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Airbag.IsDeployed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Airbag",
   "Is",
   "Deployed"
  ],
  "description": "Airbag deployment status. True = Airbag deployed. False = Airbag not deployed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Backrest.Lumbar.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Backrest",
   "Lumbar",
   "Height"
  ],
  "description": "Height of lumbar support. Position is relative within available movable range of the lumbar support. 0 = Lowermost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Backrest.Lumbar.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Backrest",
   "Lumbar",
   "Support"
  ],
  "description": "Lumbar support (in/out position). 0 = Innermost position. 100 = Outermost position.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Backrest.Recline",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Backrest",
   "Recline"
  ],
  "description": "Backrest recline compared to seat z-axis (seat vertical axis). 0 degrees = Upright/Vertical backrest. Negative degrees for forward recline. Positive degrees for backward recline.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Backrest.SideBolster.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Backrest",
   "Side",
   "Bolster",
   "Support"
  ],
  "description": "Side bolster support. 0 = Minimum support (widest side bolster setting). 100 = Maximum support.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Massage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Massage"
  ],
  "description": "Seat massage level. 0 = off. 100 = max massage.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Position"
  ],
  "description": "Seat position on vehicle x-axis. Position is relative to the frontmost position supported by the seat. 0 = Frontmost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Seating.Length",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Seating",
   "Length"
  ],
  "description": "Length adjustment of seating. 0 = Adjustable part of seating in rearmost position (Shortest length of seating).",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.IsReclineForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Forward",
   "Engaged"
  ],
  "description": "Backrest recline forward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.Lumbar.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.Lumbar.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.Lumbar.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Lumbar up switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.Lumbar.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Lumbar down switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.SideBolster.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.SideBolster.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Backrest.IsReclineBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Backward",
   "Engaged"
  ],
  "description": "Backrest recline backward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Seat backward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Seat down switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Seat forward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Seat up switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Seating.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Is switch to decrease seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Seating.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Is switch to increase seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Headrest.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Head rest up switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Headrest.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Head rest backward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Headrest.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Head rest down switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Headrest.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Head rest forward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsCoolerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Cooler",
   "Engaged"
  ],
  "description": "Cooler switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsTiltBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Backward",
   "Engaged"
  ],
  "description": "Tilt backward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsTiltForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Forward",
   "Engaged"
  ],
  "description": "Tilt forward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.IsWarmerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Is",
   "Warmer",
   "Engaged"
  ],
  "description": "Warmer switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Massage.IsDecreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Decrease",
   "Engaged"
  ],
  "description": "Decrease massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Switch.Massage.IsIncreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Increase",
   "Engaged"
  ],
  "description": "Increase massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Headrest.Angle",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Headrest",
   "Angle"
  ],
  "description": "Headrest angle, relative to backrest, 0 degrees if parallel to backrest, Positive degrees = tilted forward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Headrest.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Headrest",
   "Height"
  ],
  "description": "Position of headrest relative to movable range of the head rest. 0 = Bottommost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Heating",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Heating"
  ],
  "description": "Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Height"
  ],
  "description": "Seat position on vehicle z-axis. Position is relative within available movable range of the seating. 0 = Lowermost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.IsBelted",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Belted"
  ],
  "description": "Is the belt engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.IsOccupied",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Occupied"
  ],
  "description": "Does the seat have a passenger in it.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Occupant.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Occupant",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Occupant.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Occupant",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.DriverSide.Tilt",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Driver",
   "Side",
   "Tilt"
  ],
  "description": "Tilting of seat (seating and backrest) relative to vehicle x-axis. 0 = seat bottom is flat, seat bottom and vehicle x-axis are parallel. Positive degrees = seat tilted backwards, seat x-axis tilted upward, seat z-axis is tilted backward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.IsBelted",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Is",
   "Belted"
  ],
  "description": "Is the belt engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Massage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Massage"
  ],
  "description": "Seat massage level. 0 = off. 100 = max massage.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Occupant.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Occupant",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Occupant.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Occupant",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Seating.Length",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Seating",
   "Length"
  ],
  "description": "Length adjustment of seating. 0 = Adjustable part of seating in rearmost position (Shortest length of seating).",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Seat backward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Seat down switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsTiltForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Tilt",
   "Forward",
   "Engaged"
  ],
  "description": "Tilt forward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Seat up switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsWarmerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Warmer",
   "Engaged"
  ],
  "description": "Warmer switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Massage.IsDecreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Massage",
   "Is",
   "Decrease",
   "Engaged"
  ],
  "description": "Decrease massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Massage.IsIncreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Massage",
   "Is",
   "Increase",
   "Engaged"
  ],
  "description": "Increase massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Seating.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Seating",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Is switch to decrease seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Seating.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Seating",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Is switch to increase seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.SideBolster.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.SideBolster.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.IsReclineBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Backward",
   "Engaged"
  ],
  "description": "Backrest recline backward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.IsReclineForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Forward",
   "Engaged"
  ],
  "description": "Backrest recline forward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.Lumbar.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.Lumbar.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Lumbar up switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.Lumbar.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Lumbar down switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Backrest.Lumbar.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Headrest.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Head rest backward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Headrest.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Head rest down switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Headrest.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Head rest forward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.Headrest.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Headrest",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Head rest up switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsCoolerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Cooler",
   "Engaged"
  ],
  "description": "Cooler switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Seat forward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Switch.IsTiltBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Switch",
   "Is",
   "Tilt",
   "Backward",
   "Engaged"
  ],
  "description": "Tilt backward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Tilt",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Tilt"
  ],
  "description": "Tilting of seat (seating and backrest) relative to vehicle x-axis. 0 = seat bottom is flat, seat bottom and vehicle x-axis are parallel. Positive degrees = seat tilted backwards, seat x-axis tilted upward, seat z-axis is tilted backward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Position"
  ],
  "description": "Seat position on vehicle x-axis. Position is relative to the frontmost position supported by the seat. 0 = Frontmost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Airbag.IsDeployed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Airbag",
   "Is",
   "Deployed"
  ],
  "description": "Airbag deployment status. True = Airbag deployed. False = Airbag not deployed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Backrest.Lumbar.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Backrest",
   "Lumbar",
   "Height"
  ],
  "description": "Height of lumbar support. Position is relative within available movable range of the lumbar support. 0 = Lowermost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Backrest.Lumbar.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Backrest",
   "Lumbar",
   "Support"
  ],
  "description": "Lumbar support (in/out position). 0 = Innermost position. 100 = Outermost position.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Backrest.Recline",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Backrest",
   "Recline"
  ],
  "description": "Backrest recline compared to seat z-axis (seat vertical axis). 0 degrees = Upright/Vertical backrest. Negative degrees for forward recline. Positive degrees for backward recline.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Backrest.SideBolster.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Backrest",
   "Side",
   "Bolster",
   "Support"
  ],
  "description": "Side bolster support. 0 = Minimum support (widest side bolster setting). 100 = Maximum support.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Headrest.Angle",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Headrest",
   "Angle"
  ],
  "description": "Headrest angle, relative to backrest, 0 degrees if parallel to backrest, Positive degrees = tilted forward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Headrest.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Headrest",
   "Height"
  ],
  "description": "Position of headrest relative to movable range of the head rest. 0 = Bottommost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Heating",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Heating"
  ],
  "description": "Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Height"
  ],
  "description": "Seat position on vehicle z-axis. Position is relative within available movable range of the seating. 0 = Lowermost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.Middle.IsOccupied",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Middle",
   "Is",
   "Occupied"
  ],
  "description": "Does the seat have a passenger in it.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Heating",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Heating"
  ],
  "description": "Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Height"
  ],
  "description": "Seat position on vehicle z-axis. Position is relative within available movable range of the seating. 0 = Lowermost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.IsOccupied",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Occupied"
  ],
  "description": "Does the seat have a passenger in it.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Massage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Massage"
  ],
  "description": "Seat massage level. 0 = off. 100 = max massage.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Seating.Length",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Seating",
   "Length"
  ],
  "description": "Length adjustment of seating. 0 = Adjustable part of seating in rearmost position (Shortest length of seating).",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Tilt",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Tilt"
  ],
  "description": "Tilting of seat (seating and backrest) relative to vehicle x-axis. 0 = seat bottom is flat, seat bottom and vehicle x-axis are parallel. Positive degrees = seat tilted backwards, seat x-axis tilted upward, seat z-axis is tilted backward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Airbag.IsDeployed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Airbag",
   "Is",
   "Deployed"
  ],
  "description": "Airbag deployment status. True = Airbag deployed. False = Airbag not deployed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Headrest.Angle",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Headrest",
   "Angle"
  ],
  "description": "Headrest angle, relative to backrest, 0 degrees if parallel to backrest, Positive degrees = tilted forward.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Headrest.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Headrest",
   "Height"
  ],
  "description": "Position of headrest relative to movable range of the head rest. 0 = Bottommost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Occupant.Identifier.Issuer",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Occupant",
   "Identifier",
   "Issuer"
  ],
  "description": "Unique Issuer for the authentication of the occupant e.g. https://accounts.funcorp.com.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Occupant.Identifier.Subject",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Occupant",
   "Identifier",
   "Subject"
  ],
  "description": "Subject for the authentication of the occupant e.g. UserID 7331677.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Position"
  ],
  "description": "Seat position on vehicle x-axis. Position is relative to the frontmost position supported by the seat. 0 = Frontmost position supported.",
  "datatype": "uint16",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsTiltBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Backward",
   "Engaged"
  ],
  "description": "Tilt backward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsTiltForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Tilt",
   "Forward",
   "Engaged"
  ],
  "description": "Tilt forward switch engaged (SingleSeat.Tilt).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Seat up switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsWarmerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Warmer",
   "Engaged"
  ],
  "description": "Warmer switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Seating.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Is switch to decrease seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Seating.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Seating",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Is switch to increase seating length engaged (SingleSeat.Seating.Length).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.SideBolster.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.SideBolster.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Side",
   "Bolster",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more side bolster support engaged (SingleSeat.Backrest.SideBolster.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.IsReclineBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Backward",
   "Engaged"
  ],
  "description": "Backrest recline backward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.IsReclineForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Is",
   "Recline",
   "Forward",
   "Engaged"
  ],
  "description": "Backrest recline forward switch engaged (SingleSeat.Backrest.Recline).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.Lumbar.IsMoreSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "More",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for more lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.Lumbar.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Lumbar up switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.Lumbar.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Lumbar down switch engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Backrest.Lumbar.IsLessSupportEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Backrest",
   "Lumbar",
   "Is",
   "Less",
   "Support",
   "Engaged"
  ],
  "description": "Is switch for less lumbar support engaged (SingleSeat.Backrest.Lumbar.Support).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsCoolerEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Cooler",
   "Engaged"
  ],
  "description": "Cooler switch for Seat heater (SingleSeat.Heating).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Seat forward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Massage.IsDecreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Decrease",
   "Engaged"
  ],
  "description": "Decrease massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Massage.IsIncreaseEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Massage",
   "Is",
   "Increase",
   "Engaged"
  ],
  "description": "Increase massage level switch engaged (SingleSeat.Massage).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Headrest.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Head rest backward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Headrest.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Head rest down switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Headrest.IsForwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Forward",
   "Engaged"
  ],
  "description": "Head rest forward switch engaged (SingleSeat.Headrest.Angle).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.Headrest.IsUpEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Headrest",
   "Is",
   "Up",
   "Engaged"
  ],
  "description": "Head rest up switch engaged (SingleSeat.Headrest.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsBackwardEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Backward",
   "Engaged"
  ],
  "description": "Seat backward switch engaged (SingleSeat.Position).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Switch.IsDownEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Switch",
   "Is",
   "Down",
   "Engaged"
  ],
  "description": "Seat down switch engaged (SingleSeat.Height).",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Backrest.SideBolster.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Backrest",
   "Side",
   "Bolster",
   "Support"
  ],
  "description": "Side bolster support. 0 = Minimum support (widest side bolster setting). 100 = Maximum support.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Backrest.Lumbar.Height",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Backrest",
   "Lumbar",
   "Height"
  ],
  "description": "Height of lumbar support. Position is relative within available movable range of the lumbar support. 0 = Lowermost position supported.",
  "datatype": "uint8",
  "unit": "mm"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Backrest.Lumbar.Support",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Backrest",
   "Lumbar",
   "Support"
  ],
  "description": "Lumbar support (in/out position). 0 = Innermost position. 100 = Outermost position.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.Backrest.Recline",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Backrest",
   "Recline"
  ],
  "description": "Backrest recline compared to seat z-axis (seat vertical axis). 0 degrees = Upright/Vertical backrest. Negative degrees for forward recline. Positive degrees for backward recline.",
  "datatype": "float",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Seat.Row2.PassengerSide.IsBelted",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Belted"
  ],
  "description": "Is the belt engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Sunroof.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Sunroof",
   "Position"
  ],
  "description": "Sunroof position. 0 = Fully closed 100 = Fully opened. -100 = Fully tilted.",
  "datatype": "int8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Sunroof.Shade.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Sunroof",
   "Shade",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Sunroof.Shade.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Sunroof",
   "Shade",
   "Position"
  ],
  "description": "Position of window blind. 0 = Fully retracted. 100 = Fully deployed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Sunroof.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Sunroof",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or shade.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.RearShade.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Rear",
   "Shade",
   "Position"
  ],
  "description": "Position of window blind. 0 = Fully retracted. 100 = Fully deployed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.RearShade.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Rear",
   "Shade",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.SeatPosCount",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Pos",
   "Count"
  ],
  "description": "Number of seats across each row from the front to the rear.",
  "datatype": "uint8[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.SeatRowCount",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Seat",
   "Row",
   "Count"
  ],
  "description": "Number of seat rows in vehicle.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.IsChildLockActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Child",
   "Lock",
   "Active"
  ],
  "description": "Is door child lock active. True = Door cannot be opened from inside. False = Door can be opened from inside.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.IsLocked",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Locked"
  ],
  "description": "Is door locked or unlocked. True = Locked. False = Unlocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Is",
   "Open"
  ],
  "description": "Is door open or closed",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.Shade.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Shade",
   "Position"
  ],
  "description": "Position of window blind. 0 = Fully retracted. 100 = Fully deployed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.Shade.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Shade",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.Window.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Window",
   "Is",
   "Open"
  ],
  "description": "Is window open or closed?",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.Window.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Window",
   "Position"
  ],
  "description": "Window position. 0 = Fully closed 100 = Fully opened.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.PassengerSide.Window.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Passenger",
   "Side",
   "Window",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.Window.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Window",
   "Is",
   "Open"
  ],
  "description": "Is window open or closed?",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.Window.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Window",
   "Position"
  ],
  "description": "Window position. 0 = Fully closed 100 = Fully opened.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.Window.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Window",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.IsChildLockActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Child",
   "Lock",
   "Active"
  ],
  "description": "Is door child lock active. True = Door cannot be opened from inside. False = Door can be opened from inside.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.IsLocked",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Locked"
  ],
  "description": "Is door locked or unlocked. True = Locked. False = Unlocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Is",
   "Open"
  ],
  "description": "Is door open or closed",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.Shade.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Shade",
   "Position"
  ],
  "description": "Position of window blind. 0 = Fully retracted. 100 = Fully deployed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row1.DriverSide.Shade.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row1",
   "Driver",
   "Side",
   "Shade",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.IsChildLockActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Child",
   "Lock",
   "Active"
  ],
  "description": "Is door child lock active. True = Door cannot be opened from inside. False = Door can be opened from inside.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.IsLocked",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Locked"
  ],
  "description": "Is door locked or unlocked. True = Locked. False = Unlocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Is",
   "Open"
  ],
  "description": "Is door open or closed",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.Shade.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Shade",
   "Position"
  ],
  "description": "Position of window blind. 0 = Fully retracted. 100 = Fully deployed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.Shade.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Shade",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.Window.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Window",
   "Is",
   "Open"
  ],
  "description": "Is window open or closed?",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.Window.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Window",
   "Position"
  ],
  "description": "Window position. 0 = Fully closed 100 = Fully opened.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.DriverSide.Window.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Driver",
   "Side",
   "Window",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.IsChildLockActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Child",
   "Lock",
   "Active"
  ],
  "description": "Is door child lock active. True = Door cannot be opened from inside. False = Door can be opened from inside.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.IsLocked",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Locked"
  ],
  "description": "Is door locked or unlocked. True = Locked. False = Unlocked.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Is",
   "Open"
  ],
  "description": "Is door open or closed",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.Shade.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Shade",
   "Position"
  ],
  "description": "Position of window blind. 0 = Fully retracted. 100 = Fully deployed.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.Shade.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Shade",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.Window.IsOpen",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Window",
   "Is",
   "Open"
  ],
  "description": "Is window open or closed?",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.Window.Position",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Window",
   "Position"
  ],
  "description": "Window position. 0 = Fully closed 100 = Fully opened.",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Door.Row2.PassengerSide.Window.Switch",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Row2",
   "Passenger",
   "Side",
   "Window",
   "Switch"
  ],
  "description": "Switch controlling sliding action such as window, sunroof, or blind.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.DriverPosition",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Driver",
   "Position"
  ],
  "description": "The position of the driver seat in row 1.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.AmbientAirTemperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Ambient",
   "Air",
   "Temperature"
  ],
  "description": "Ambient air temperature inside the vehicle.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.IsAirConditioningActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Is",
   "Air",
   "Conditioning",
   "Active"
  ],
  "description": "Is Air conditioning active.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.IsFrontDefrosterActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Is",
   "Front",
   "Defroster",
   "Active"
  ],
  "description": "Is front defroster active.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.IsRearDefrosterActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Is",
   "Rear",
   "Defroster",
   "Active"
  ],
  "description": "Is rear defroster active.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.IsRecirculationActive",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Is",
   "Recirculation",
   "Active"
  ],
  "description": "Is recirculation active.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row4.Driver.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row4",
   "Driver",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row4.Driver.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row4",
   "Driver",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row4.Driver.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row4",
   "Driver",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row4.Passenger.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row4",
   "Passenger",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row4.Passenger.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row4",
   "Passenger",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row4.Passenger.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row4",
   "Passenger",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row1.Driver.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row1",
   "Driver",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row1.Driver.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row1",
   "Driver",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row1.Driver.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row1",
   "Driver",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row1.Passenger.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row1",
   "Passenger",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row1.Passenger.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row1",
   "Passenger",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row1.Passenger.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row1",
   "Passenger",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row2.Driver.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row2",
   "Driver",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row2.Driver.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row2",
   "Driver",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row2.Driver.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row2",
   "Driver",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row2.Passenger.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row2",
   "Passenger",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row2.Passenger.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row2",
   "Passenger",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row2.Passenger.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row2",
   "Passenger",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row3.Driver.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row3",
   "Driver",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row3.Driver.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row3",
   "Driver",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row3.Driver.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row3",
   "Driver",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row3.Passenger.AirDistribution",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row3",
   "Passenger",
   "Air",
   "Distribution"
  ],
  "description": "Direction of airstream",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row3.Passenger.FanSpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row3",
   "Passenger",
   "Fan",
   "Speed"
  ],
  "description": "Fan Speed, 0 = off. 100 = max",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.HVAC.Station.Row3.Passenger.Temperature",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "HVAC",
   "Station",
   "Row3",
   "Passenger",
   "Temperature"
  ],
  "description": "Temperature",
  "datatype": "int8",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.FuelEconomyUnits",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Fuel",
   "Economy",
   "Units"
  ],
  "description": "Fuel economy unit used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.TirePressureUnit",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Tire",
   "Pressure",
   "Unit"
  ],
  "description": "Tire pressure unit used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.DayNightMode",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Day",
   "Night",
   "Mode"
  ],
  "description": "Current display theme",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.DisplaySpeed",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Display",
   "Speed"
  ],
  "description": "Display Speed",
  "datatype": "float",
  "unit": "m/s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.EVEconomyUnits",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "E",
   "V",
   "Economy",
   "Units"
  ],
  "description": "EV fuel economy unit used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.FontSize",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Font",
   "Size"
  ],
  "description": "Font size used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.DisplayOffDuration",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Display",
   "Off",
   "Duration"
  ],
  "description": "Duration in seconds before the display is turned off. Value shall be 0 if screen never shall turn off.",
  "datatype": "uint16",
  "unit": "s"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.DisplaySpeedUnit",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Display",
   "Speed",
   "Unit"
  ],
  "description": "Display Speed unit",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.IsScreenAlwaysOn",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Is",
   "Screen",
   "Always",
   "On"
  ],
  "description": "Used to prevent the screen going black if no action placed.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.TimeFormat",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Time",
   "Format"
  ],
  "description": "Time format used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.Brightness",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Brightness"
  ],
  "description": "Brightness of the HMI, relative to supported range. 0 = Lowest brightness possible. 100 = Maximum Brightness possible.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.DistanceUnit",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Distance",
   "Unit"
  ],
  "description": "Distance unit used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.TemperatureUnit",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Temperature",
   "Unit"
  ],
  "description": "Temperature unit used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.TurnSignalState",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Turn",
   "Signal",
   "State"
  ],
  "description": "Turn signal state",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.CurrentLanguage",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Current",
   "Language"
  ],
  "description": "ISO 639-1 standard language code for the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.DateFormat",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Date",
   "Format"
  ],
  "description": "Date format used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.FuelVolumeUnit",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Fuel",
   "Volume",
   "Unit"
  ],
  "description": "Fuel volume unit used in the current HMI",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.HMI.LastActionTime",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "HMI",
   "Last",
   "Action",
   "Time"
  ],
  "description": "Time for last hmi action, formatted according to ISO 8601 with UTC time zone.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Action",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Action"
  ],
  "description": "Tells if the media was",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.DeclinedURI",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Declined",
   "U",
   "R",
   "I"
  ],
  "description": "URI of suggested media that was declined",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Played.Album",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Played",
   "Album"
  ],
  "description": "Name of album being played",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Played.Artist",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Played",
   "Artist"
  ],
  "description": "Name of artist being played",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Played.PlaybackRate",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Played",
   "Playback",
   "Rate"
  ],
  "description": "Current playback rate of media being played.",
  "datatype": "float",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Played.Source",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Played",
   "Source"
  ],
  "description": "Media selected for playback",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Played.Track",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Played",
   "Track"
  ],
  "description": "Name of track being played",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Played.URI",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Played",
   "URI"
  ],
  "description": "User Resource associated with the media",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.SelectedURI",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Selected",
   "U",
   "R",
   "I"
  ],
  "description": "URI of suggested media that was selected",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Media.Volume",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Media",
   "Volume"
  ],
  "description": "Current Media Volume",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Navigation.GuidanceVoice",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Navigation",
   "Guidance",
   "Voice"
  ],
  "description": "Navigation guidance state that was selected.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Navigation.Mute",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Navigation",
   "Mute"
  ],
  "description": "Navigation mute state that was selected.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Navigation.Volume",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Navigation",
   "Volume"
  ],
  "description": "Current navigation volume",
  "datatype": "uint8",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Navigation.DestinationSet.Latitude",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Navigation",
   "Destination",
   "Set",
   "Latitude"
  ],
  "description": "Latitude of destination in WGS 84 geodetic coordinates.",
  "datatype": "double",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.Navigation.DestinationSet.Longitude",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Navigation",
   "Destination",
   "Set",
   "Longitude"
  ],
  "description": "Longitude of destination in WGS 84 geodetic coordinates.",
  "datatype": "double",
  "unit": "degrees"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.SmartphoneProjection.Active",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Smartphone",
   "Projection",
   "Active"
  ],
  "description": "Projection activation info.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.SmartphoneProjection.Source",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Smartphone",
   "Projection",
   "Source"
  ],
  "description": "Connectivity source selected for projection.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Infotainment.SmartphoneProjection.SupportedMode",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Infotainment",
   "Smartphone",
   "Projection",
   "Supported",
   "Mode"
  ],
  "description": "Supportable list for projection.",
  "datatype": "string[]",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.Convertible.Status",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Convertible",
   "Status"
  ],
  "description": "Roof status on convertible vehicles.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.DoorCount",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Door",
   "Count"
  ],
  "description": "Number of doors in vehicle.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Cabin.IsWindowChildLockEngaged",
  "lextokens": [
   "Vehicle",
   "Cabin",
   "Is",
   "Window",
   "Child",
   "Lock",
   "Engaged"
  ],
  "description": "Is window child lock engaged. True = Engaged. False = Disengaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Exterior.AirTemperature",
  "lextokens": [
   "Vehicle",
   "Exterior",
   "Air",
   "Temperature"
  ],
  "description": "Air temperature outside the vehicle.",
  "datatype": "float",
  "unit": "celsius"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Exterior.Humidity",
  "lextokens": [
   "Vehicle",
   "Exterior",
   "Humidity"
  ],
  "description": "Relative humidity outside the vehicle. 0 = Dry, 100 = Air fully saturated.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.Exterior.LightIntensity",
  "lextokens": [
   "Vehicle",
   "Exterior",
   "Light",
   "Intensity"
  ],
  "description": "Light intensity outside the vehicle. 0 = No light detected, 100 = Fully lit.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.IsBrokenDown",
  "lextokens": [
   "Vehicle",
   "Is",
   "Broken",
   "Down"
  ],
  "description": "Vehicle breakdown or any similar event causing vehicle to stop on the road, that might pose a risk to other road users. True = Vehicle broken down on the road, due to e.g. engine problems, flat tire, out of gas, brake problems. False = Vehicle not broken down.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.StartTime",
  "lextokens": [
   "Vehicle",
   "Start",
   "Time"
  ],
  "description": "Start time of current or latest trip, formatted according to ISO 8601 with UTC time zone.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ActiveAutonomyLevel",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Active",
   "Autonomy",
   "Level"
  ],
  "description": "Indicates the currently active level of autonomy according to SAE J3016 taxonomy.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.CruiseControl.IsActive",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Cruise",
   "Control",
   "Is",
   "Active"
  ],
  "description": "Indicates if cruise control system is active (i.e. actively controls speed). True = Active. False = Inactive.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.CruiseControl.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Cruise",
   "Control",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if cruise control system is enabled (e.g. ready to receive configurations and settings) True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.CruiseControl.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Cruise",
   "Control",
   "Is",
   "Error"
  ],
  "description": "Indicates if cruise control system incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.CruiseControl.SpeedSet",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Cruise",
   "Control",
   "Speed",
   "Set"
  ],
  "description": "Set cruise control speed in kilometers per hour.",
  "datatype": "float",
  "unit": "km/h"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.DMS.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "DMS",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if DMS is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.DMS.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "DMS",
   "Is",
   "Error"
  ],
  "description": "Indicates if DMS incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.DMS.IsWarning",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "DMS",
   "Is",
   "Warning"
  ],
  "description": "Indicates if DMS has registered a driver alert condition.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.EBD.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "EBD",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if EBD is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.EBD.IsEngaged",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "EBD",
   "Is",
   "Engaged"
  ],
  "description": "Indicates if EBD is currently regulating vehicle brakeforce distribution. True = Engaged. False = Not Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.EBD.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "EBD",
   "Is",
   "Error"
  ],
  "description": "Indicates if EBD incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.IsStrongCrossWindDetected",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Is",
   "Strong",
   "Cross",
   "Wind",
   "Detected"
  ],
  "description": "Indicates if the ESC system is detecting strong cross winds. True = Strong cross winds detected. False = No strong cross winds detected.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.RoadFriction.MostProbable",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Road",
   "Friction",
   "Most",
   "Probable"
  ],
  "description": "Most probable road friction, as calculated by the ESC system. Exact meaning of most probable is implementation specific. 0 = no friction, 100 = maximum friction.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.RoadFriction.UpperBound",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Road",
   "Friction",
   "Upper",
   "Bound"
  ],
  "description": "Upper bound road friction, as calculated by the ESC system. 95% possibility that road friction is below this value. 0 = no friction, 100 = maximum friction.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.RoadFriction.LowerBound",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Road",
   "Friction",
   "Lower",
   "Bound"
  ],
  "description": "Lower bound road friction, as calculated by the ESC system. 5% possibility that road friction is below this value. 0 = no friction, 100 = maximum friction.",
  "datatype": "float",
  "unit": "percent"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if ESC is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.IsEngaged",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Is",
   "Engaged"
  ],
  "description": "Indicates if ESC is currently regulating vehicle stability. True = Engaged. False = Not Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ESC.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ESC",
   "Is",
   "Error"
  ],
  "description": "Indicates if ESC incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.LaneDepartureDetection.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Lane",
   "Departure",
   "Detection",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if lane departure detection system is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.LaneDepartureDetection.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Lane",
   "Departure",
   "Detection",
   "Is",
   "Error"
  ],
  "description": "Indicates if lane departure system incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.LaneDepartureDetection.IsWarning",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Lane",
   "Departure",
   "Detection",
   "Is",
   "Warning"
  ],
  "description": "Indicates if lane departure detection registered a lane departure.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ObstacleDetection.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Obstacle",
   "Detection",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if obstacle sensor system is enabled (i.e. monitoring for obstacles). True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ObstacleDetection.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Obstacle",
   "Detection",
   "Is",
   "Error"
  ],
  "description": "Indicates if obstacle sensor system incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ObstacleDetection.IsWarning",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Obstacle",
   "Detection",
   "Is",
   "Warning"
  ],
  "description": "Indicates if obstacle sensor system registered an obstacle.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ABS.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ABS",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if ABS is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ABS.IsEngaged",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ABS",
   "Is",
   "Engaged"
  ],
  "description": "Indicates if ABS is currently regulating brake pressure. True = Engaged. False = Not Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.ABS.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "ABS",
   "Is",
   "Error"
  ],
  "description": "Indicates if ABS incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.PowerOptimizeLevel",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Power",
   "Optimize",
   "Level"
  ],
  "description": "Power optimization level for this branch/subsystem. A higher number indicates more aggressive power optimization. Level 0 indicates that all functionality is enabled, no power optimization enabled. Level 10 indicates most aggressive power optimization mode, only essential functionality enabled.",
  "datatype": "uint8",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.SupportedAutonomyLevel",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "Supported",
   "Autonomy",
   "Level"
  ],
  "description": "Indicates the highest level of autonomy according to SAE J3016 taxonomy the vehicle is capable of.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.TCS.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "TCS",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if TCS is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.TCS.IsEngaged",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "TCS",
   "Is",
   "Engaged"
  ],
  "description": "Indicates if TCS is currently regulating traction. True = Engaged. False = Not Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.TCS.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "TCS",
   "Is",
   "Error"
  ],
  "description": "Indicates if TCS incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.EBA.IsEnabled",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "EBA",
   "Is",
   "Enabled"
  ],
  "description": "Indicates if EBA is enabled. True = Enabled. False = Disabled.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.EBA.IsEngaged",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "EBA",
   "Is",
   "Engaged"
  ],
  "description": "Indicates if EBA is currently regulating brake pressure. True = Engaged. False = Not Engaged.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.ADAS.EBA.IsError",
  "lextokens": [
   "Vehicle",
   "ADAS",
   "EBA",
   "Is",
   "Error"
  ],
  "description": "Indicates if EBA incurred an error condition. True = Error. False = No Error.",
  "datatype": "boolean",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.TripMeterReading",
  "lextokens": [
   "Vehicle",
   "Trip",
   "Meter",
   "Reading"
  ],
  "description": "Trip meter reading.",
  "datatype": "float",
  "unit": "km"
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VersionVSS.Label",
  "lextokens": [
   "Vehicle",
   "Version",
   "V",
   "S",
   "S",
   "Label"
  ],
  "description": "Label to further describe the version.",
  "datatype": "string",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VersionVSS.Major",
  "lextokens": [
   "Vehicle",
   "Version",
   "V",
   "S",
   "S",
   "Major"
  ],
  "description": "Supported Version of VSS - Major version.",
  "datatype": "uint32",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VersionVSS.Minor",
  "lextokens": [
   "Vehicle",
   "Version",
   "V",
   "S",
   "S",
   "Minor"
  ],
  "description": "Supported Version of VSS - Minor version.",
  "datatype": "uint32",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.VersionVSS.Patch",
  "lextokens": [
   "Vehicle",
   "Version",
   "V",
   "S",
   "S",
   "Patch"
  ],
  "description": "Supported Version of VSS - Patch version.",
  "datatype": "uint32",
  "unit": ""
 },
 {
  "signaltype": 0,
  "signame": "Vehicle.CurbWeight",
  "lextokens": [
   "Vehicle",
   "Curb",
   "Weight"
  ],
  "description": "Vehicle curb weight, including all liquids and full tank of fuel, but no cargo or passengers.",
  "datatype": "uint16",
  "unit": "kg"
 }
]